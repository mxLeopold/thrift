/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.sunlands.entrpc.thriftservice;

import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;
import org.apache.thrift.scheme.TupleScheme;

import javax.annotation.Generated;
import java.util.*;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2018-02-24")
public class OrderInfo implements org.apache.thrift.TBase<OrderInfo, OrderInfo._Fields>, java.io.Serializable, Cloneable, Comparable<OrderInfo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("OrderInfo");

  private static final org.apache.thrift.protocol.TField REGIST_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("registDate", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField PAIDUP_AMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("paidupAmount", org.apache.thrift.protocol.TType.DOUBLE, (short)2);
  private static final org.apache.thrift.protocol.TField PACKAGE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("packageId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField PACKAGE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("packageName", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField REGIST_PROVINCE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("registProvinceId", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField REGIST_PROVINCE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("registProvinceName", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField PROJST_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("projstName", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField PROJND_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("projndName", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField COLLEGE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("collegeId", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField COLLEGE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("collegeName", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField FAMILY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("familyId", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField FAMILY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("familyName", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField INSTRUCTOR_CODE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("instructorCodeName", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField INSTRUCTOR_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("instructorName", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField INSTRUCTOR_EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("instructorEmail", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField INSTRUCTOR_WECHAT_FIELD_DESC = new org.apache.thrift.protocol.TField("instructorWechat", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField ORD_STATUS_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("ordStatusCode", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField REGIST_CITY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("registCityName", org.apache.thrift.protocol.TType.STRING, (short)18);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new OrderInfoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new OrderInfoTupleSchemeFactory());
  }

  public String registDate; // required
  public double paidupAmount; // required
  public int packageId; // required
  public String packageName; // required
  public int registProvinceId; // required
  public String registProvinceName; // required
  public String projstName; // required
  public String projndName; // required
  public int collegeId; // required
  public String collegeName; // required
  public int familyId; // required
  public String familyName; // required
  public String instructorCodeName; // required
  public String instructorName; // required
  public String instructorEmail; // required
  public String instructorWechat; // required
  public String ordStatusCode; // required
  public String registCityName; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    REGIST_DATE((short)1, "registDate"),
    PAIDUP_AMOUNT((short)2, "paidupAmount"),
    PACKAGE_ID((short)3, "packageId"),
    PACKAGE_NAME((short)4, "packageName"),
    REGIST_PROVINCE_ID((short)5, "registProvinceId"),
    REGIST_PROVINCE_NAME((short)6, "registProvinceName"),
    PROJST_NAME((short)7, "projstName"),
    PROJND_NAME((short)8, "projndName"),
    COLLEGE_ID((short)9, "collegeId"),
    COLLEGE_NAME((short)10, "collegeName"),
    FAMILY_ID((short)11, "familyId"),
    FAMILY_NAME((short)12, "familyName"),
    INSTRUCTOR_CODE_NAME((short)13, "instructorCodeName"),
    INSTRUCTOR_NAME((short)14, "instructorName"),
    INSTRUCTOR_EMAIL((short)15, "instructorEmail"),
    INSTRUCTOR_WECHAT((short)16, "instructorWechat"),
    ORD_STATUS_CODE((short)17, "ordStatusCode"),
    REGIST_CITY_NAME((short)18, "registCityName");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // REGIST_DATE
          return REGIST_DATE;
        case 2: // PAIDUP_AMOUNT
          return PAIDUP_AMOUNT;
        case 3: // PACKAGE_ID
          return PACKAGE_ID;
        case 4: // PACKAGE_NAME
          return PACKAGE_NAME;
        case 5: // REGIST_PROVINCE_ID
          return REGIST_PROVINCE_ID;
        case 6: // REGIST_PROVINCE_NAME
          return REGIST_PROVINCE_NAME;
        case 7: // PROJST_NAME
          return PROJST_NAME;
        case 8: // PROJND_NAME
          return PROJND_NAME;
        case 9: // COLLEGE_ID
          return COLLEGE_ID;
        case 10: // COLLEGE_NAME
          return COLLEGE_NAME;
        case 11: // FAMILY_ID
          return FAMILY_ID;
        case 12: // FAMILY_NAME
          return FAMILY_NAME;
        case 13: // INSTRUCTOR_CODE_NAME
          return INSTRUCTOR_CODE_NAME;
        case 14: // INSTRUCTOR_NAME
          return INSTRUCTOR_NAME;
        case 15: // INSTRUCTOR_EMAIL
          return INSTRUCTOR_EMAIL;
        case 16: // INSTRUCTOR_WECHAT
          return INSTRUCTOR_WECHAT;
        case 17: // ORD_STATUS_CODE
          return ORD_STATUS_CODE;
        case 18: // REGIST_CITY_NAME
          return REGIST_CITY_NAME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PAIDUPAMOUNT_ISSET_ID = 0;
  private static final int __PACKAGEID_ISSET_ID = 1;
  private static final int __REGISTPROVINCEID_ISSET_ID = 2;
  private static final int __COLLEGEID_ISSET_ID = 3;
  private static final int __FAMILYID_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.REGIST_DATE, new org.apache.thrift.meta_data.FieldMetaData("registDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAIDUP_AMOUNT, new org.apache.thrift.meta_data.FieldMetaData("paidupAmount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.PACKAGE_ID, new org.apache.thrift.meta_data.FieldMetaData("packageId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PACKAGE_NAME, new org.apache.thrift.meta_data.FieldMetaData("packageName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REGIST_PROVINCE_ID, new org.apache.thrift.meta_data.FieldMetaData("registProvinceId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.REGIST_PROVINCE_NAME, new org.apache.thrift.meta_data.FieldMetaData("registProvinceName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROJST_NAME, new org.apache.thrift.meta_data.FieldMetaData("projstName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROJND_NAME, new org.apache.thrift.meta_data.FieldMetaData("projndName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COLLEGE_ID, new org.apache.thrift.meta_data.FieldMetaData("collegeId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COLLEGE_NAME, new org.apache.thrift.meta_data.FieldMetaData("collegeName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FAMILY_ID, new org.apache.thrift.meta_data.FieldMetaData("familyId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FAMILY_NAME, new org.apache.thrift.meta_data.FieldMetaData("familyName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.INSTRUCTOR_CODE_NAME, new org.apache.thrift.meta_data.FieldMetaData("instructorCodeName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.INSTRUCTOR_NAME, new org.apache.thrift.meta_data.FieldMetaData("instructorName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.INSTRUCTOR_EMAIL, new org.apache.thrift.meta_data.FieldMetaData("instructorEmail", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.INSTRUCTOR_WECHAT, new org.apache.thrift.meta_data.FieldMetaData("instructorWechat", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORD_STATUS_CODE, new org.apache.thrift.meta_data.FieldMetaData("ordStatusCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REGIST_CITY_NAME, new org.apache.thrift.meta_data.FieldMetaData("registCityName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(OrderInfo.class, metaDataMap);
  }

  public OrderInfo() {
  }

  public OrderInfo(
    String registDate,
    double paidupAmount,
    int packageId,
    String packageName,
    int registProvinceId,
    String registProvinceName,
    String projstName,
    String projndName,
    int collegeId,
    String collegeName,
    int familyId,
    String familyName,
    String instructorCodeName,
    String instructorName,
    String instructorEmail,
    String instructorWechat,
    String ordStatusCode,
    String registCityName)
  {
    this();
    this.registDate = registDate;
    this.paidupAmount = paidupAmount;
    setPaidupAmountIsSet(true);
    this.packageId = packageId;
    setPackageIdIsSet(true);
    this.packageName = packageName;
    this.registProvinceId = registProvinceId;
    setRegistProvinceIdIsSet(true);
    this.registProvinceName = registProvinceName;
    this.projstName = projstName;
    this.projndName = projndName;
    this.collegeId = collegeId;
    setCollegeIdIsSet(true);
    this.collegeName = collegeName;
    this.familyId = familyId;
    setFamilyIdIsSet(true);
    this.familyName = familyName;
    this.instructorCodeName = instructorCodeName;
    this.instructorName = instructorName;
    this.instructorEmail = instructorEmail;
    this.instructorWechat = instructorWechat;
    this.ordStatusCode = ordStatusCode;
    this.registCityName = registCityName;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public OrderInfo(OrderInfo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetRegistDate()) {
      this.registDate = other.registDate;
    }
    this.paidupAmount = other.paidupAmount;
    this.packageId = other.packageId;
    if (other.isSetPackageName()) {
      this.packageName = other.packageName;
    }
    this.registProvinceId = other.registProvinceId;
    if (other.isSetRegistProvinceName()) {
      this.registProvinceName = other.registProvinceName;
    }
    if (other.isSetProjstName()) {
      this.projstName = other.projstName;
    }
    if (other.isSetProjndName()) {
      this.projndName = other.projndName;
    }
    this.collegeId = other.collegeId;
    if (other.isSetCollegeName()) {
      this.collegeName = other.collegeName;
    }
    this.familyId = other.familyId;
    if (other.isSetFamilyName()) {
      this.familyName = other.familyName;
    }
    if (other.isSetInstructorCodeName()) {
      this.instructorCodeName = other.instructorCodeName;
    }
    if (other.isSetInstructorName()) {
      this.instructorName = other.instructorName;
    }
    if (other.isSetInstructorEmail()) {
      this.instructorEmail = other.instructorEmail;
    }
    if (other.isSetInstructorWechat()) {
      this.instructorWechat = other.instructorWechat;
    }
    if (other.isSetOrdStatusCode()) {
      this.ordStatusCode = other.ordStatusCode;
    }
    if (other.isSetRegistCityName()) {
      this.registCityName = other.registCityName;
    }
  }

  public OrderInfo deepCopy() {
    return new OrderInfo(this);
  }

  @Override
  public void clear() {
    this.registDate = null;
    setPaidupAmountIsSet(false);
    this.paidupAmount = 0.0;
    setPackageIdIsSet(false);
    this.packageId = 0;
    this.packageName = null;
    setRegistProvinceIdIsSet(false);
    this.registProvinceId = 0;
    this.registProvinceName = null;
    this.projstName = null;
    this.projndName = null;
    setCollegeIdIsSet(false);
    this.collegeId = 0;
    this.collegeName = null;
    setFamilyIdIsSet(false);
    this.familyId = 0;
    this.familyName = null;
    this.instructorCodeName = null;
    this.instructorName = null;
    this.instructorEmail = null;
    this.instructorWechat = null;
    this.ordStatusCode = null;
    this.registCityName = null;
  }

  public String getRegistDate() {
    return this.registDate;
  }

  public OrderInfo setRegistDate(String registDate) {
    this.registDate = registDate;
    return this;
  }

  public void unsetRegistDate() {
    this.registDate = null;
  }

  /** Returns true if field registDate is set (has been assigned a value) and false otherwise */
  public boolean isSetRegistDate() {
    return this.registDate != null;
  }

  public void setRegistDateIsSet(boolean value) {
    if (!value) {
      this.registDate = null;
    }
  }

  public double getPaidupAmount() {
    return this.paidupAmount;
  }

  public OrderInfo setPaidupAmount(double paidupAmount) {
    this.paidupAmount = paidupAmount;
    setPaidupAmountIsSet(true);
    return this;
  }

  public void unsetPaidupAmount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAIDUPAMOUNT_ISSET_ID);
  }

  /** Returns true if field paidupAmount is set (has been assigned a value) and false otherwise */
  public boolean isSetPaidupAmount() {
    return EncodingUtils.testBit(__isset_bitfield, __PAIDUPAMOUNT_ISSET_ID);
  }

  public void setPaidupAmountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAIDUPAMOUNT_ISSET_ID, value);
  }

  public int getPackageId() {
    return this.packageId;
  }

  public OrderInfo setPackageId(int packageId) {
    this.packageId = packageId;
    setPackageIdIsSet(true);
    return this;
  }

  public void unsetPackageId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PACKAGEID_ISSET_ID);
  }

  /** Returns true if field packageId is set (has been assigned a value) and false otherwise */
  public boolean isSetPackageId() {
    return EncodingUtils.testBit(__isset_bitfield, __PACKAGEID_ISSET_ID);
  }

  public void setPackageIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PACKAGEID_ISSET_ID, value);
  }

  public String getPackageName() {
    return this.packageName;
  }

  public OrderInfo setPackageName(String packageName) {
    this.packageName = packageName;
    return this;
  }

  public void unsetPackageName() {
    this.packageName = null;
  }

  /** Returns true if field packageName is set (has been assigned a value) and false otherwise */
  public boolean isSetPackageName() {
    return this.packageName != null;
  }

  public void setPackageNameIsSet(boolean value) {
    if (!value) {
      this.packageName = null;
    }
  }

  public int getRegistProvinceId() {
    return this.registProvinceId;
  }

  public OrderInfo setRegistProvinceId(int registProvinceId) {
    this.registProvinceId = registProvinceId;
    setRegistProvinceIdIsSet(true);
    return this;
  }

  public void unsetRegistProvinceId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __REGISTPROVINCEID_ISSET_ID);
  }

  /** Returns true if field registProvinceId is set (has been assigned a value) and false otherwise */
  public boolean isSetRegistProvinceId() {
    return EncodingUtils.testBit(__isset_bitfield, __REGISTPROVINCEID_ISSET_ID);
  }

  public void setRegistProvinceIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __REGISTPROVINCEID_ISSET_ID, value);
  }

  public String getRegistProvinceName() {
    return this.registProvinceName;
  }

  public OrderInfo setRegistProvinceName(String registProvinceName) {
    this.registProvinceName = registProvinceName;
    return this;
  }

  public void unsetRegistProvinceName() {
    this.registProvinceName = null;
  }

  /** Returns true if field registProvinceName is set (has been assigned a value) and false otherwise */
  public boolean isSetRegistProvinceName() {
    return this.registProvinceName != null;
  }

  public void setRegistProvinceNameIsSet(boolean value) {
    if (!value) {
      this.registProvinceName = null;
    }
  }

  public String getProjstName() {
    return this.projstName;
  }

  public OrderInfo setProjstName(String projstName) {
    this.projstName = projstName;
    return this;
  }

  public void unsetProjstName() {
    this.projstName = null;
  }

  /** Returns true if field projstName is set (has been assigned a value) and false otherwise */
  public boolean isSetProjstName() {
    return this.projstName != null;
  }

  public void setProjstNameIsSet(boolean value) {
    if (!value) {
      this.projstName = null;
    }
  }

  public String getProjndName() {
    return this.projndName;
  }

  public OrderInfo setProjndName(String projndName) {
    this.projndName = projndName;
    return this;
  }

  public void unsetProjndName() {
    this.projndName = null;
  }

  /** Returns true if field projndName is set (has been assigned a value) and false otherwise */
  public boolean isSetProjndName() {
    return this.projndName != null;
  }

  public void setProjndNameIsSet(boolean value) {
    if (!value) {
      this.projndName = null;
    }
  }

  public int getCollegeId() {
    return this.collegeId;
  }

  public OrderInfo setCollegeId(int collegeId) {
    this.collegeId = collegeId;
    setCollegeIdIsSet(true);
    return this;
  }

  public void unsetCollegeId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __COLLEGEID_ISSET_ID);
  }

  /** Returns true if field collegeId is set (has been assigned a value) and false otherwise */
  public boolean isSetCollegeId() {
    return EncodingUtils.testBit(__isset_bitfield, __COLLEGEID_ISSET_ID);
  }

  public void setCollegeIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __COLLEGEID_ISSET_ID, value);
  }

  public String getCollegeName() {
    return this.collegeName;
  }

  public OrderInfo setCollegeName(String collegeName) {
    this.collegeName = collegeName;
    return this;
  }

  public void unsetCollegeName() {
    this.collegeName = null;
  }

  /** Returns true if field collegeName is set (has been assigned a value) and false otherwise */
  public boolean isSetCollegeName() {
    return this.collegeName != null;
  }

  public void setCollegeNameIsSet(boolean value) {
    if (!value) {
      this.collegeName = null;
    }
  }

  public int getFamilyId() {
    return this.familyId;
  }

  public OrderInfo setFamilyId(int familyId) {
    this.familyId = familyId;
    setFamilyIdIsSet(true);
    return this;
  }

  public void unsetFamilyId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __FAMILYID_ISSET_ID);
  }

  /** Returns true if field familyId is set (has been assigned a value) and false otherwise */
  public boolean isSetFamilyId() {
    return EncodingUtils.testBit(__isset_bitfield, __FAMILYID_ISSET_ID);
  }

  public void setFamilyIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __FAMILYID_ISSET_ID, value);
  }

  public String getFamilyName() {
    return this.familyName;
  }

  public OrderInfo setFamilyName(String familyName) {
    this.familyName = familyName;
    return this;
  }

  public void unsetFamilyName() {
    this.familyName = null;
  }

  /** Returns true if field familyName is set (has been assigned a value) and false otherwise */
  public boolean isSetFamilyName() {
    return this.familyName != null;
  }

  public void setFamilyNameIsSet(boolean value) {
    if (!value) {
      this.familyName = null;
    }
  }

  public String getInstructorCodeName() {
    return this.instructorCodeName;
  }

  public OrderInfo setInstructorCodeName(String instructorCodeName) {
    this.instructorCodeName = instructorCodeName;
    return this;
  }

  public void unsetInstructorCodeName() {
    this.instructorCodeName = null;
  }

  /** Returns true if field instructorCodeName is set (has been assigned a value) and false otherwise */
  public boolean isSetInstructorCodeName() {
    return this.instructorCodeName != null;
  }

  public void setInstructorCodeNameIsSet(boolean value) {
    if (!value) {
      this.instructorCodeName = null;
    }
  }

  public String getInstructorName() {
    return this.instructorName;
  }

  public OrderInfo setInstructorName(String instructorName) {
    this.instructorName = instructorName;
    return this;
  }

  public void unsetInstructorName() {
    this.instructorName = null;
  }

  /** Returns true if field instructorName is set (has been assigned a value) and false otherwise */
  public boolean isSetInstructorName() {
    return this.instructorName != null;
  }

  public void setInstructorNameIsSet(boolean value) {
    if (!value) {
      this.instructorName = null;
    }
  }

  public String getInstructorEmail() {
    return this.instructorEmail;
  }

  public OrderInfo setInstructorEmail(String instructorEmail) {
    this.instructorEmail = instructorEmail;
    return this;
  }

  public void unsetInstructorEmail() {
    this.instructorEmail = null;
  }

  /** Returns true if field instructorEmail is set (has been assigned a value) and false otherwise */
  public boolean isSetInstructorEmail() {
    return this.instructorEmail != null;
  }

  public void setInstructorEmailIsSet(boolean value) {
    if (!value) {
      this.instructorEmail = null;
    }
  }

  public String getInstructorWechat() {
    return this.instructorWechat;
  }

  public OrderInfo setInstructorWechat(String instructorWechat) {
    this.instructorWechat = instructorWechat;
    return this;
  }

  public void unsetInstructorWechat() {
    this.instructorWechat = null;
  }

  /** Returns true if field instructorWechat is set (has been assigned a value) and false otherwise */
  public boolean isSetInstructorWechat() {
    return this.instructorWechat != null;
  }

  public void setInstructorWechatIsSet(boolean value) {
    if (!value) {
      this.instructorWechat = null;
    }
  }

  public String getOrdStatusCode() {
    return this.ordStatusCode;
  }

  public OrderInfo setOrdStatusCode(String ordStatusCode) {
    this.ordStatusCode = ordStatusCode;
    return this;
  }

  public void unsetOrdStatusCode() {
    this.ordStatusCode = null;
  }

  /** Returns true if field ordStatusCode is set (has been assigned a value) and false otherwise */
  public boolean isSetOrdStatusCode() {
    return this.ordStatusCode != null;
  }

  public void setOrdStatusCodeIsSet(boolean value) {
    if (!value) {
      this.ordStatusCode = null;
    }
  }

  public String getRegistCityName() {
    return this.registCityName;
  }

  public OrderInfo setRegistCityName(String registCityName) {
    this.registCityName = registCityName;
    return this;
  }

  public void unsetRegistCityName() {
    this.registCityName = null;
  }

  /** Returns true if field registCityName is set (has been assigned a value) and false otherwise */
  public boolean isSetRegistCityName() {
    return this.registCityName != null;
  }

  public void setRegistCityNameIsSet(boolean value) {
    if (!value) {
      this.registCityName = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case REGIST_DATE:
      if (value == null) {
        unsetRegistDate();
      } else {
        setRegistDate((String)value);
      }
      break;

    case PAIDUP_AMOUNT:
      if (value == null) {
        unsetPaidupAmount();
      } else {
        setPaidupAmount((Double)value);
      }
      break;

    case PACKAGE_ID:
      if (value == null) {
        unsetPackageId();
      } else {
        setPackageId((Integer)value);
      }
      break;

    case PACKAGE_NAME:
      if (value == null) {
        unsetPackageName();
      } else {
        setPackageName((String)value);
      }
      break;

    case REGIST_PROVINCE_ID:
      if (value == null) {
        unsetRegistProvinceId();
      } else {
        setRegistProvinceId((Integer)value);
      }
      break;

    case REGIST_PROVINCE_NAME:
      if (value == null) {
        unsetRegistProvinceName();
      } else {
        setRegistProvinceName((String)value);
      }
      break;

    case PROJST_NAME:
      if (value == null) {
        unsetProjstName();
      } else {
        setProjstName((String)value);
      }
      break;

    case PROJND_NAME:
      if (value == null) {
        unsetProjndName();
      } else {
        setProjndName((String)value);
      }
      break;

    case COLLEGE_ID:
      if (value == null) {
        unsetCollegeId();
      } else {
        setCollegeId((Integer)value);
      }
      break;

    case COLLEGE_NAME:
      if (value == null) {
        unsetCollegeName();
      } else {
        setCollegeName((String)value);
      }
      break;

    case FAMILY_ID:
      if (value == null) {
        unsetFamilyId();
      } else {
        setFamilyId((Integer)value);
      }
      break;

    case FAMILY_NAME:
      if (value == null) {
        unsetFamilyName();
      } else {
        setFamilyName((String)value);
      }
      break;

    case INSTRUCTOR_CODE_NAME:
      if (value == null) {
        unsetInstructorCodeName();
      } else {
        setInstructorCodeName((String)value);
      }
      break;

    case INSTRUCTOR_NAME:
      if (value == null) {
        unsetInstructorName();
      } else {
        setInstructorName((String)value);
      }
      break;

    case INSTRUCTOR_EMAIL:
      if (value == null) {
        unsetInstructorEmail();
      } else {
        setInstructorEmail((String)value);
      }
      break;

    case INSTRUCTOR_WECHAT:
      if (value == null) {
        unsetInstructorWechat();
      } else {
        setInstructorWechat((String)value);
      }
      break;

    case ORD_STATUS_CODE:
      if (value == null) {
        unsetOrdStatusCode();
      } else {
        setOrdStatusCode((String)value);
      }
      break;

    case REGIST_CITY_NAME:
      if (value == null) {
        unsetRegistCityName();
      } else {
        setRegistCityName((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case REGIST_DATE:
      return getRegistDate();

    case PAIDUP_AMOUNT:
      return getPaidupAmount();

    case PACKAGE_ID:
      return getPackageId();

    case PACKAGE_NAME:
      return getPackageName();

    case REGIST_PROVINCE_ID:
      return getRegistProvinceId();

    case REGIST_PROVINCE_NAME:
      return getRegistProvinceName();

    case PROJST_NAME:
      return getProjstName();

    case PROJND_NAME:
      return getProjndName();

    case COLLEGE_ID:
      return getCollegeId();

    case COLLEGE_NAME:
      return getCollegeName();

    case FAMILY_ID:
      return getFamilyId();

    case FAMILY_NAME:
      return getFamilyName();

    case INSTRUCTOR_CODE_NAME:
      return getInstructorCodeName();

    case INSTRUCTOR_NAME:
      return getInstructorName();

    case INSTRUCTOR_EMAIL:
      return getInstructorEmail();

    case INSTRUCTOR_WECHAT:
      return getInstructorWechat();

    case ORD_STATUS_CODE:
      return getOrdStatusCode();

    case REGIST_CITY_NAME:
      return getRegistCityName();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case REGIST_DATE:
      return isSetRegistDate();
    case PAIDUP_AMOUNT:
      return isSetPaidupAmount();
    case PACKAGE_ID:
      return isSetPackageId();
    case PACKAGE_NAME:
      return isSetPackageName();
    case REGIST_PROVINCE_ID:
      return isSetRegistProvinceId();
    case REGIST_PROVINCE_NAME:
      return isSetRegistProvinceName();
    case PROJST_NAME:
      return isSetProjstName();
    case PROJND_NAME:
      return isSetProjndName();
    case COLLEGE_ID:
      return isSetCollegeId();
    case COLLEGE_NAME:
      return isSetCollegeName();
    case FAMILY_ID:
      return isSetFamilyId();
    case FAMILY_NAME:
      return isSetFamilyName();
    case INSTRUCTOR_CODE_NAME:
      return isSetInstructorCodeName();
    case INSTRUCTOR_NAME:
      return isSetInstructorName();
    case INSTRUCTOR_EMAIL:
      return isSetInstructorEmail();
    case INSTRUCTOR_WECHAT:
      return isSetInstructorWechat();
    case ORD_STATUS_CODE:
      return isSetOrdStatusCode();
    case REGIST_CITY_NAME:
      return isSetRegistCityName();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof OrderInfo)
      return this.equals((OrderInfo)that);
    return false;
  }

  public boolean equals(OrderInfo that) {
    if (that == null)
      return false;

    boolean this_present_registDate = true && this.isSetRegistDate();
    boolean that_present_registDate = true && that.isSetRegistDate();
    if (this_present_registDate || that_present_registDate) {
      if (!(this_present_registDate && that_present_registDate))
        return false;
      if (!this.registDate.equals(that.registDate))
        return false;
    }

    boolean this_present_paidupAmount = true;
    boolean that_present_paidupAmount = true;
    if (this_present_paidupAmount || that_present_paidupAmount) {
      if (!(this_present_paidupAmount && that_present_paidupAmount))
        return false;
      if (this.paidupAmount != that.paidupAmount)
        return false;
    }

    boolean this_present_packageId = true;
    boolean that_present_packageId = true;
    if (this_present_packageId || that_present_packageId) {
      if (!(this_present_packageId && that_present_packageId))
        return false;
      if (this.packageId != that.packageId)
        return false;
    }

    boolean this_present_packageName = true && this.isSetPackageName();
    boolean that_present_packageName = true && that.isSetPackageName();
    if (this_present_packageName || that_present_packageName) {
      if (!(this_present_packageName && that_present_packageName))
        return false;
      if (!this.packageName.equals(that.packageName))
        return false;
    }

    boolean this_present_registProvinceId = true;
    boolean that_present_registProvinceId = true;
    if (this_present_registProvinceId || that_present_registProvinceId) {
      if (!(this_present_registProvinceId && that_present_registProvinceId))
        return false;
      if (this.registProvinceId != that.registProvinceId)
        return false;
    }

    boolean this_present_registProvinceName = true && this.isSetRegistProvinceName();
    boolean that_present_registProvinceName = true && that.isSetRegistProvinceName();
    if (this_present_registProvinceName || that_present_registProvinceName) {
      if (!(this_present_registProvinceName && that_present_registProvinceName))
        return false;
      if (!this.registProvinceName.equals(that.registProvinceName))
        return false;
    }

    boolean this_present_projstName = true && this.isSetProjstName();
    boolean that_present_projstName = true && that.isSetProjstName();
    if (this_present_projstName || that_present_projstName) {
      if (!(this_present_projstName && that_present_projstName))
        return false;
      if (!this.projstName.equals(that.projstName))
        return false;
    }

    boolean this_present_projndName = true && this.isSetProjndName();
    boolean that_present_projndName = true && that.isSetProjndName();
    if (this_present_projndName || that_present_projndName) {
      if (!(this_present_projndName && that_present_projndName))
        return false;
      if (!this.projndName.equals(that.projndName))
        return false;
    }

    boolean this_present_collegeId = true;
    boolean that_present_collegeId = true;
    if (this_present_collegeId || that_present_collegeId) {
      if (!(this_present_collegeId && that_present_collegeId))
        return false;
      if (this.collegeId != that.collegeId)
        return false;
    }

    boolean this_present_collegeName = true && this.isSetCollegeName();
    boolean that_present_collegeName = true && that.isSetCollegeName();
    if (this_present_collegeName || that_present_collegeName) {
      if (!(this_present_collegeName && that_present_collegeName))
        return false;
      if (!this.collegeName.equals(that.collegeName))
        return false;
    }

    boolean this_present_familyId = true;
    boolean that_present_familyId = true;
    if (this_present_familyId || that_present_familyId) {
      if (!(this_present_familyId && that_present_familyId))
        return false;
      if (this.familyId != that.familyId)
        return false;
    }

    boolean this_present_familyName = true && this.isSetFamilyName();
    boolean that_present_familyName = true && that.isSetFamilyName();
    if (this_present_familyName || that_present_familyName) {
      if (!(this_present_familyName && that_present_familyName))
        return false;
      if (!this.familyName.equals(that.familyName))
        return false;
    }

    boolean this_present_instructorCodeName = true && this.isSetInstructorCodeName();
    boolean that_present_instructorCodeName = true && that.isSetInstructorCodeName();
    if (this_present_instructorCodeName || that_present_instructorCodeName) {
      if (!(this_present_instructorCodeName && that_present_instructorCodeName))
        return false;
      if (!this.instructorCodeName.equals(that.instructorCodeName))
        return false;
    }

    boolean this_present_instructorName = true && this.isSetInstructorName();
    boolean that_present_instructorName = true && that.isSetInstructorName();
    if (this_present_instructorName || that_present_instructorName) {
      if (!(this_present_instructorName && that_present_instructorName))
        return false;
      if (!this.instructorName.equals(that.instructorName))
        return false;
    }

    boolean this_present_instructorEmail = true && this.isSetInstructorEmail();
    boolean that_present_instructorEmail = true && that.isSetInstructorEmail();
    if (this_present_instructorEmail || that_present_instructorEmail) {
      if (!(this_present_instructorEmail && that_present_instructorEmail))
        return false;
      if (!this.instructorEmail.equals(that.instructorEmail))
        return false;
    }

    boolean this_present_instructorWechat = true && this.isSetInstructorWechat();
    boolean that_present_instructorWechat = true && that.isSetInstructorWechat();
    if (this_present_instructorWechat || that_present_instructorWechat) {
      if (!(this_present_instructorWechat && that_present_instructorWechat))
        return false;
      if (!this.instructorWechat.equals(that.instructorWechat))
        return false;
    }

    boolean this_present_ordStatusCode = true && this.isSetOrdStatusCode();
    boolean that_present_ordStatusCode = true && that.isSetOrdStatusCode();
    if (this_present_ordStatusCode || that_present_ordStatusCode) {
      if (!(this_present_ordStatusCode && that_present_ordStatusCode))
        return false;
      if (!this.ordStatusCode.equals(that.ordStatusCode))
        return false;
    }

    boolean this_present_registCityName = true && this.isSetRegistCityName();
    boolean that_present_registCityName = true && that.isSetRegistCityName();
    if (this_present_registCityName || that_present_registCityName) {
      if (!(this_present_registCityName && that_present_registCityName))
        return false;
      if (!this.registCityName.equals(that.registCityName))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_registDate = true && (isSetRegistDate());
    list.add(present_registDate);
    if (present_registDate)
      list.add(registDate);

    boolean present_paidupAmount = true;
    list.add(present_paidupAmount);
    if (present_paidupAmount)
      list.add(paidupAmount);

    boolean present_packageId = true;
    list.add(present_packageId);
    if (present_packageId)
      list.add(packageId);

    boolean present_packageName = true && (isSetPackageName());
    list.add(present_packageName);
    if (present_packageName)
      list.add(packageName);

    boolean present_registProvinceId = true;
    list.add(present_registProvinceId);
    if (present_registProvinceId)
      list.add(registProvinceId);

    boolean present_registProvinceName = true && (isSetRegistProvinceName());
    list.add(present_registProvinceName);
    if (present_registProvinceName)
      list.add(registProvinceName);

    boolean present_projstName = true && (isSetProjstName());
    list.add(present_projstName);
    if (present_projstName)
      list.add(projstName);

    boolean present_projndName = true && (isSetProjndName());
    list.add(present_projndName);
    if (present_projndName)
      list.add(projndName);

    boolean present_collegeId = true;
    list.add(present_collegeId);
    if (present_collegeId)
      list.add(collegeId);

    boolean present_collegeName = true && (isSetCollegeName());
    list.add(present_collegeName);
    if (present_collegeName)
      list.add(collegeName);

    boolean present_familyId = true;
    list.add(present_familyId);
    if (present_familyId)
      list.add(familyId);

    boolean present_familyName = true && (isSetFamilyName());
    list.add(present_familyName);
    if (present_familyName)
      list.add(familyName);

    boolean present_instructorCodeName = true && (isSetInstructorCodeName());
    list.add(present_instructorCodeName);
    if (present_instructorCodeName)
      list.add(instructorCodeName);

    boolean present_instructorName = true && (isSetInstructorName());
    list.add(present_instructorName);
    if (present_instructorName)
      list.add(instructorName);

    boolean present_instructorEmail = true && (isSetInstructorEmail());
    list.add(present_instructorEmail);
    if (present_instructorEmail)
      list.add(instructorEmail);

    boolean present_instructorWechat = true && (isSetInstructorWechat());
    list.add(present_instructorWechat);
    if (present_instructorWechat)
      list.add(instructorWechat);

    boolean present_ordStatusCode = true && (isSetOrdStatusCode());
    list.add(present_ordStatusCode);
    if (present_ordStatusCode)
      list.add(ordStatusCode);

    boolean present_registCityName = true && (isSetRegistCityName());
    list.add(present_registCityName);
    if (present_registCityName)
      list.add(registCityName);

    return list.hashCode();
  }

  @Override
  public int compareTo(OrderInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetRegistDate()).compareTo(other.isSetRegistDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRegistDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.registDate, other.registDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPaidupAmount()).compareTo(other.isSetPaidupAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaidupAmount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paidupAmount, other.paidupAmount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPackageId()).compareTo(other.isSetPackageId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPackageId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.packageId, other.packageId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPackageName()).compareTo(other.isSetPackageName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPackageName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.packageName, other.packageName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRegistProvinceId()).compareTo(other.isSetRegistProvinceId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRegistProvinceId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.registProvinceId, other.registProvinceId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRegistProvinceName()).compareTo(other.isSetRegistProvinceName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRegistProvinceName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.registProvinceName, other.registProvinceName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProjstName()).compareTo(other.isSetProjstName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjstName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projstName, other.projstName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProjndName()).compareTo(other.isSetProjndName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjndName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projndName, other.projndName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCollegeId()).compareTo(other.isSetCollegeId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCollegeId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.collegeId, other.collegeId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCollegeName()).compareTo(other.isSetCollegeName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCollegeName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.collegeName, other.collegeName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFamilyId()).compareTo(other.isSetFamilyId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFamilyId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.familyId, other.familyId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFamilyName()).compareTo(other.isSetFamilyName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFamilyName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.familyName, other.familyName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetInstructorCodeName()).compareTo(other.isSetInstructorCodeName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInstructorCodeName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.instructorCodeName, other.instructorCodeName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetInstructorName()).compareTo(other.isSetInstructorName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInstructorName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.instructorName, other.instructorName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetInstructorEmail()).compareTo(other.isSetInstructorEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInstructorEmail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.instructorEmail, other.instructorEmail);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetInstructorWechat()).compareTo(other.isSetInstructorWechat());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInstructorWechat()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.instructorWechat, other.instructorWechat);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrdStatusCode()).compareTo(other.isSetOrdStatusCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrdStatusCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ordStatusCode, other.ordStatusCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRegistCityName()).compareTo(other.isSetRegistCityName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRegistCityName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.registCityName, other.registCityName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("OrderInfo(");
    boolean first = true;

    sb.append("registDate:");
    if (this.registDate == null) {
      sb.append("null");
    } else {
      sb.append(this.registDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("paidupAmount:");
    sb.append(this.paidupAmount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("packageId:");
    sb.append(this.packageId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("packageName:");
    if (this.packageName == null) {
      sb.append("null");
    } else {
      sb.append(this.packageName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("registProvinceId:");
    sb.append(this.registProvinceId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("registProvinceName:");
    if (this.registProvinceName == null) {
      sb.append("null");
    } else {
      sb.append(this.registProvinceName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("projstName:");
    if (this.projstName == null) {
      sb.append("null");
    } else {
      sb.append(this.projstName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("projndName:");
    if (this.projndName == null) {
      sb.append("null");
    } else {
      sb.append(this.projndName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("collegeId:");
    sb.append(this.collegeId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("collegeName:");
    if (this.collegeName == null) {
      sb.append("null");
    } else {
      sb.append(this.collegeName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("familyId:");
    sb.append(this.familyId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("familyName:");
    if (this.familyName == null) {
      sb.append("null");
    } else {
      sb.append(this.familyName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("instructorCodeName:");
    if (this.instructorCodeName == null) {
      sb.append("null");
    } else {
      sb.append(this.instructorCodeName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("instructorName:");
    if (this.instructorName == null) {
      sb.append("null");
    } else {
      sb.append(this.instructorName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("instructorEmail:");
    if (this.instructorEmail == null) {
      sb.append("null");
    } else {
      sb.append(this.instructorEmail);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("instructorWechat:");
    if (this.instructorWechat == null) {
      sb.append("null");
    } else {
      sb.append(this.instructorWechat);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ordStatusCode:");
    if (this.ordStatusCode == null) {
      sb.append("null");
    } else {
      sb.append(this.ordStatusCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("registCityName:");
    if (this.registCityName == null) {
      sb.append("null");
    } else {
      sb.append(this.registCityName);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class OrderInfoStandardSchemeFactory implements SchemeFactory {
    public OrderInfoStandardScheme getScheme() {
      return new OrderInfoStandardScheme();
    }
  }

  private static class OrderInfoStandardScheme extends StandardScheme<OrderInfo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, OrderInfo struct) throws TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
          break;
        }
        switch (schemeField.id) {
          case 1: // REGIST_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.registDate = iprot.readString();
              struct.setRegistDateIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PAIDUP_AMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.paidupAmount = iprot.readDouble();
              struct.setPaidupAmountIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PACKAGE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.packageId = iprot.readI32();
              struct.setPackageIdIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PACKAGE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.packageName = iprot.readString();
              struct.setPackageNameIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // REGIST_PROVINCE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.registProvinceId = iprot.readI32();
              struct.setRegistProvinceIdIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // REGIST_PROVINCE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.registProvinceName = iprot.readString();
              struct.setRegistProvinceNameIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // PROJST_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.projstName = iprot.readString();
              struct.setProjstNameIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PROJND_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.projndName = iprot.readString();
              struct.setProjndNameIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // COLLEGE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.collegeId = iprot.readI32();
              struct.setCollegeIdIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // COLLEGE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.collegeName = iprot.readString();
              struct.setCollegeNameIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // FAMILY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.familyId = iprot.readI32();
              struct.setFamilyIdIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // FAMILY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.familyName = iprot.readString();
              struct.setFamilyNameIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // INSTRUCTOR_CODE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.instructorCodeName = iprot.readString();
              struct.setInstructorCodeNameIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // INSTRUCTOR_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.instructorName = iprot.readString();
              struct.setInstructorNameIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // INSTRUCTOR_EMAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.instructorEmail = iprot.readString();
              struct.setInstructorEmailIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // INSTRUCTOR_WECHAT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.instructorWechat = iprot.readString();
              struct.setInstructorWechatIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // ORD_STATUS_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ordStatusCode = iprot.readString();
              struct.setOrdStatusCodeIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // REGIST_CITY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.registCityName = iprot.readString();
              struct.setRegistCityNameIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, OrderInfo struct) throws TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.registDate != null) {
        oprot.writeFieldBegin(REGIST_DATE_FIELD_DESC);
        oprot.writeString(struct.registDate);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PAIDUP_AMOUNT_FIELD_DESC);
      oprot.writeDouble(struct.paidupAmount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PACKAGE_ID_FIELD_DESC);
      oprot.writeI32(struct.packageId);
      oprot.writeFieldEnd();
      if (struct.packageName != null) {
        oprot.writeFieldBegin(PACKAGE_NAME_FIELD_DESC);
        oprot.writeString(struct.packageName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(REGIST_PROVINCE_ID_FIELD_DESC);
      oprot.writeI32(struct.registProvinceId);
      oprot.writeFieldEnd();
      if (struct.registProvinceName != null) {
        oprot.writeFieldBegin(REGIST_PROVINCE_NAME_FIELD_DESC);
        oprot.writeString(struct.registProvinceName);
        oprot.writeFieldEnd();
      }
      if (struct.projstName != null) {
        oprot.writeFieldBegin(PROJST_NAME_FIELD_DESC);
        oprot.writeString(struct.projstName);
        oprot.writeFieldEnd();
      }
      if (struct.projndName != null) {
        oprot.writeFieldBegin(PROJND_NAME_FIELD_DESC);
        oprot.writeString(struct.projndName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(COLLEGE_ID_FIELD_DESC);
      oprot.writeI32(struct.collegeId);
      oprot.writeFieldEnd();
      if (struct.collegeName != null) {
        oprot.writeFieldBegin(COLLEGE_NAME_FIELD_DESC);
        oprot.writeString(struct.collegeName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(FAMILY_ID_FIELD_DESC);
      oprot.writeI32(struct.familyId);
      oprot.writeFieldEnd();
      if (struct.familyName != null) {
        oprot.writeFieldBegin(FAMILY_NAME_FIELD_DESC);
        oprot.writeString(struct.familyName);
        oprot.writeFieldEnd();
      }
      if (struct.instructorCodeName != null) {
        oprot.writeFieldBegin(INSTRUCTOR_CODE_NAME_FIELD_DESC);
        oprot.writeString(struct.instructorCodeName);
        oprot.writeFieldEnd();
      }
      if (struct.instructorName != null) {
        oprot.writeFieldBegin(INSTRUCTOR_NAME_FIELD_DESC);
        oprot.writeString(struct.instructorName);
        oprot.writeFieldEnd();
      }
      if (struct.instructorEmail != null) {
        oprot.writeFieldBegin(INSTRUCTOR_EMAIL_FIELD_DESC);
        oprot.writeString(struct.instructorEmail);
        oprot.writeFieldEnd();
      }
      if (struct.instructorWechat != null) {
        oprot.writeFieldBegin(INSTRUCTOR_WECHAT_FIELD_DESC);
        oprot.writeString(struct.instructorWechat);
        oprot.writeFieldEnd();
      }
      if (struct.ordStatusCode != null) {
        oprot.writeFieldBegin(ORD_STATUS_CODE_FIELD_DESC);
        oprot.writeString(struct.ordStatusCode);
        oprot.writeFieldEnd();
      }
      if (struct.registCityName != null) {
        oprot.writeFieldBegin(REGIST_CITY_NAME_FIELD_DESC);
        oprot.writeString(struct.registCityName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class OrderInfoTupleSchemeFactory implements SchemeFactory {
    public OrderInfoTupleScheme getScheme() {
      return new OrderInfoTupleScheme();
    }
  }

  private static class OrderInfoTupleScheme extends TupleScheme<OrderInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, OrderInfo struct) throws TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetRegistDate()) {
        optionals.set(0);
      }
      if (struct.isSetPaidupAmount()) {
        optionals.set(1);
      }
      if (struct.isSetPackageId()) {
        optionals.set(2);
      }
      if (struct.isSetPackageName()) {
        optionals.set(3);
      }
      if (struct.isSetRegistProvinceId()) {
        optionals.set(4);
      }
      if (struct.isSetRegistProvinceName()) {
        optionals.set(5);
      }
      if (struct.isSetProjstName()) {
        optionals.set(6);
      }
      if (struct.isSetProjndName()) {
        optionals.set(7);
      }
      if (struct.isSetCollegeId()) {
        optionals.set(8);
      }
      if (struct.isSetCollegeName()) {
        optionals.set(9);
      }
      if (struct.isSetFamilyId()) {
        optionals.set(10);
      }
      if (struct.isSetFamilyName()) {
        optionals.set(11);
      }
      if (struct.isSetInstructorCodeName()) {
        optionals.set(12);
      }
      if (struct.isSetInstructorName()) {
        optionals.set(13);
      }
      if (struct.isSetInstructorEmail()) {
        optionals.set(14);
      }
      if (struct.isSetInstructorWechat()) {
        optionals.set(15);
      }
      if (struct.isSetOrdStatusCode()) {
        optionals.set(16);
      }
      if (struct.isSetRegistCityName()) {
        optionals.set(17);
      }
      oprot.writeBitSet(optionals, 18);
      if (struct.isSetRegistDate()) {
        oprot.writeString(struct.registDate);
      }
      if (struct.isSetPaidupAmount()) {
        oprot.writeDouble(struct.paidupAmount);
      }
      if (struct.isSetPackageId()) {
        oprot.writeI32(struct.packageId);
      }
      if (struct.isSetPackageName()) {
        oprot.writeString(struct.packageName);
      }
      if (struct.isSetRegistProvinceId()) {
        oprot.writeI32(struct.registProvinceId);
      }
      if (struct.isSetRegistProvinceName()) {
        oprot.writeString(struct.registProvinceName);
      }
      if (struct.isSetProjstName()) {
        oprot.writeString(struct.projstName);
      }
      if (struct.isSetProjndName()) {
        oprot.writeString(struct.projndName);
      }
      if (struct.isSetCollegeId()) {
        oprot.writeI32(struct.collegeId);
      }
      if (struct.isSetCollegeName()) {
        oprot.writeString(struct.collegeName);
      }
      if (struct.isSetFamilyId()) {
        oprot.writeI32(struct.familyId);
      }
      if (struct.isSetFamilyName()) {
        oprot.writeString(struct.familyName);
      }
      if (struct.isSetInstructorCodeName()) {
        oprot.writeString(struct.instructorCodeName);
      }
      if (struct.isSetInstructorName()) {
        oprot.writeString(struct.instructorName);
      }
      if (struct.isSetInstructorEmail()) {
        oprot.writeString(struct.instructorEmail);
      }
      if (struct.isSetInstructorWechat()) {
        oprot.writeString(struct.instructorWechat);
      }
      if (struct.isSetOrdStatusCode()) {
        oprot.writeString(struct.ordStatusCode);
      }
      if (struct.isSetRegistCityName()) {
        oprot.writeString(struct.registCityName);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, OrderInfo struct) throws TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(18);
      if (incoming.get(0)) {
        struct.registDate = iprot.readString();
        struct.setRegistDateIsSet(true);
      }
      if (incoming.get(1)) {
        struct.paidupAmount = iprot.readDouble();
        struct.setPaidupAmountIsSet(true);
      }
      if (incoming.get(2)) {
        struct.packageId = iprot.readI32();
        struct.setPackageIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.packageName = iprot.readString();
        struct.setPackageNameIsSet(true);
      }
      if (incoming.get(4)) {
        struct.registProvinceId = iprot.readI32();
        struct.setRegistProvinceIdIsSet(true);
      }
      if (incoming.get(5)) {
        struct.registProvinceName = iprot.readString();
        struct.setRegistProvinceNameIsSet(true);
      }
      if (incoming.get(6)) {
        struct.projstName = iprot.readString();
        struct.setProjstNameIsSet(true);
      }
      if (incoming.get(7)) {
        struct.projndName = iprot.readString();
        struct.setProjndNameIsSet(true);
      }
      if (incoming.get(8)) {
        struct.collegeId = iprot.readI32();
        struct.setCollegeIdIsSet(true);
      }
      if (incoming.get(9)) {
        struct.collegeName = iprot.readString();
        struct.setCollegeNameIsSet(true);
      }
      if (incoming.get(10)) {
        struct.familyId = iprot.readI32();
        struct.setFamilyIdIsSet(true);
      }
      if (incoming.get(11)) {
        struct.familyName = iprot.readString();
        struct.setFamilyNameIsSet(true);
      }
      if (incoming.get(12)) {
        struct.instructorCodeName = iprot.readString();
        struct.setInstructorCodeNameIsSet(true);
      }
      if (incoming.get(13)) {
        struct.instructorName = iprot.readString();
        struct.setInstructorNameIsSet(true);
      }
      if (incoming.get(14)) {
        struct.instructorEmail = iprot.readString();
        struct.setInstructorEmailIsSet(true);
      }
      if (incoming.get(15)) {
        struct.instructorWechat = iprot.readString();
        struct.setInstructorWechatIsSet(true);
      }
      if (incoming.get(16)) {
        struct.ordStatusCode = iprot.readString();
        struct.setOrdStatusCodeIsSet(true);
      }
      if (incoming.get(17)) {
        struct.registCityName = iprot.readString();
        struct.setRegistCityNameIsSet(true);
      }
    }
  }

}

