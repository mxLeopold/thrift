/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.sunlands.rpc.student.sv;

import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;
import org.apache.thrift.scheme.TupleScheme;

import javax.annotation.Generated;
import java.util.*;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2018-02-28")
public class OrdServiceTeam implements org.apache.thrift.TBase<OrdServiceTeam, OrdServiceTeam._Fields>, java.io.Serializable, Cloneable, Comparable<OrdServiceTeam> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("OrdServiceTeam");

  private static final org.apache.thrift.protocol.TField APPLY_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("applyDate", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField COLLEGE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("collegeId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField COLLEGE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("collegeName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField FAMILY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("familyName", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField CODE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("codeName", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField TEACHER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("teacherName", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField AMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("amount", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField PACKAGE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("packageId", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField PACKAGE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("packageName", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField TEACHER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("teacherId", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField TEACHER_EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("teacherEmail", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField ORD_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("ordStatus", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField ORD_DETAIL_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("ordDetailId", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField BIZ_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("bizDate", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField SECOND_PROJ_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("secondProjId", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField SECOND_PROJ_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("secondProjName", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField FAMILY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("familyId", org.apache.thrift.protocol.TType.I32, (short)17);
  private static final org.apache.thrift.protocol.TField STU_IM_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("stuImId", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField FIRST_PROJ_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("firstProjId", org.apache.thrift.protocol.TType.I32, (short)19);
  private static final org.apache.thrift.protocol.TField FIRST_PROJ_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("firstProjName", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField STU_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("stuId", org.apache.thrift.protocol.TType.I32, (short)21);
  private static final org.apache.thrift.protocol.TField STU_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("stuName", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField STU_NICK_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("stuNickName", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField STU_PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("stuPhone", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField PROVINCE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("provinceId", org.apache.thrift.protocol.TType.I32, (short)25);
  private static final org.apache.thrift.protocol.TField PROVINCE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("provinceName", org.apache.thrift.protocol.TType.STRING, (short)26);
  private static final org.apache.thrift.protocol.TField USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("userId", org.apache.thrift.protocol.TType.I32, (short)27);
  private static final org.apache.thrift.protocol.TField TAGS_FIELD_DESC = new org.apache.thrift.protocol.TField("tags", org.apache.thrift.protocol.TType.LIST, (short)28);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new OrdServiceTeamStandardSchemeFactory());
    schemes.put(TupleScheme.class, new OrdServiceTeamTupleSchemeFactory());
  }

  public String applyDate; // optional
  public int collegeId; // optional
  public String collegeName; // optional
  public String familyName; // optional
  public String codeName; // optional
  public String teacherName; // optional
  public int amount; // optional
  public int packageId; // optional
  public String packageName; // optional
  public int teacherId; // optional
  public String teacherEmail; // optional
  public String ordStatus; // optional
  public int ordDetailId; // optional
  public String bizDate; // optional
  public int secondProjId; // optional
  public String secondProjName; // optional
  public int familyId; // optional
  public String stuImId; // optional
  public int firstProjId; // optional
  public String firstProjName; // optional
  public int stuId; // optional
  public String stuName; // optional
  public String stuNickName; // optional
  public String stuPhone; // optional
  public int provinceId; // optional
  public String provinceName; // optional
  public int userId; // optional
  public List<UserTag> tags; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    APPLY_DATE((short)1, "applyDate"),
    COLLEGE_ID((short)2, "collegeId"),
    COLLEGE_NAME((short)3, "collegeName"),
    FAMILY_NAME((short)4, "familyName"),
    CODE_NAME((short)5, "codeName"),
    TEACHER_NAME((short)6, "teacherName"),
    AMOUNT((short)7, "amount"),
    PACKAGE_ID((short)8, "packageId"),
    PACKAGE_NAME((short)9, "packageName"),
    TEACHER_ID((short)10, "teacherId"),
    TEACHER_EMAIL((short)11, "teacherEmail"),
    ORD_STATUS((short)12, "ordStatus"),
    ORD_DETAIL_ID((short)13, "ordDetailId"),
    BIZ_DATE((short)14, "bizDate"),
    SECOND_PROJ_ID((short)15, "secondProjId"),
    SECOND_PROJ_NAME((short)16, "secondProjName"),
    FAMILY_ID((short)17, "familyId"),
    STU_IM_ID((short)18, "stuImId"),
    FIRST_PROJ_ID((short)19, "firstProjId"),
    FIRST_PROJ_NAME((short)20, "firstProjName"),
    STU_ID((short)21, "stuId"),
    STU_NAME((short)22, "stuName"),
    STU_NICK_NAME((short)23, "stuNickName"),
    STU_PHONE((short)24, "stuPhone"),
    PROVINCE_ID((short)25, "provinceId"),
    PROVINCE_NAME((short)26, "provinceName"),
    USER_ID((short)27, "userId"),
    TAGS((short)28, "tags");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // APPLY_DATE
          return APPLY_DATE;
        case 2: // COLLEGE_ID
          return COLLEGE_ID;
        case 3: // COLLEGE_NAME
          return COLLEGE_NAME;
        case 4: // FAMILY_NAME
          return FAMILY_NAME;
        case 5: // CODE_NAME
          return CODE_NAME;
        case 6: // TEACHER_NAME
          return TEACHER_NAME;
        case 7: // AMOUNT
          return AMOUNT;
        case 8: // PACKAGE_ID
          return PACKAGE_ID;
        case 9: // PACKAGE_NAME
          return PACKAGE_NAME;
        case 10: // TEACHER_ID
          return TEACHER_ID;
        case 11: // TEACHER_EMAIL
          return TEACHER_EMAIL;
        case 12: // ORD_STATUS
          return ORD_STATUS;
        case 13: // ORD_DETAIL_ID
          return ORD_DETAIL_ID;
        case 14: // BIZ_DATE
          return BIZ_DATE;
        case 15: // SECOND_PROJ_ID
          return SECOND_PROJ_ID;
        case 16: // SECOND_PROJ_NAME
          return SECOND_PROJ_NAME;
        case 17: // FAMILY_ID
          return FAMILY_ID;
        case 18: // STU_IM_ID
          return STU_IM_ID;
        case 19: // FIRST_PROJ_ID
          return FIRST_PROJ_ID;
        case 20: // FIRST_PROJ_NAME
          return FIRST_PROJ_NAME;
        case 21: // STU_ID
          return STU_ID;
        case 22: // STU_NAME
          return STU_NAME;
        case 23: // STU_NICK_NAME
          return STU_NICK_NAME;
        case 24: // STU_PHONE
          return STU_PHONE;
        case 25: // PROVINCE_ID
          return PROVINCE_ID;
        case 26: // PROVINCE_NAME
          return PROVINCE_NAME;
        case 27: // USER_ID
          return USER_ID;
        case 28: // TAGS
          return TAGS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __COLLEGEID_ISSET_ID = 0;
  private static final int __AMOUNT_ISSET_ID = 1;
  private static final int __PACKAGEID_ISSET_ID = 2;
  private static final int __TEACHERID_ISSET_ID = 3;
  private static final int __ORDDETAILID_ISSET_ID = 4;
  private static final int __SECONDPROJID_ISSET_ID = 5;
  private static final int __FAMILYID_ISSET_ID = 6;
  private static final int __FIRSTPROJID_ISSET_ID = 7;
  private static final int __STUID_ISSET_ID = 8;
  private static final int __PROVINCEID_ISSET_ID = 9;
  private static final int __USERID_ISSET_ID = 10;
  private short __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.APPLY_DATE, _Fields.COLLEGE_ID, _Fields.COLLEGE_NAME, _Fields.FAMILY_NAME, _Fields.CODE_NAME, _Fields.TEACHER_NAME, _Fields.AMOUNT, _Fields.PACKAGE_ID, _Fields.PACKAGE_NAME, _Fields.TEACHER_ID, _Fields.TEACHER_EMAIL, _Fields.ORD_STATUS, _Fields.ORD_DETAIL_ID, _Fields.BIZ_DATE, _Fields.SECOND_PROJ_ID, _Fields.SECOND_PROJ_NAME, _Fields.FAMILY_ID, _Fields.STU_IM_ID, _Fields.FIRST_PROJ_ID, _Fields.FIRST_PROJ_NAME, _Fields.STU_ID, _Fields.STU_NAME, _Fields.STU_NICK_NAME, _Fields.STU_PHONE, _Fields.PROVINCE_ID, _Fields.PROVINCE_NAME, _Fields.USER_ID, _Fields.TAGS};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.APPLY_DATE, new org.apache.thrift.meta_data.FieldMetaData("applyDate", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COLLEGE_ID, new org.apache.thrift.meta_data.FieldMetaData("collegeId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COLLEGE_NAME, new org.apache.thrift.meta_data.FieldMetaData("collegeName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FAMILY_NAME, new org.apache.thrift.meta_data.FieldMetaData("familyName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CODE_NAME, new org.apache.thrift.meta_data.FieldMetaData("codeName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TEACHER_NAME, new org.apache.thrift.meta_data.FieldMetaData("teacherName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AMOUNT, new org.apache.thrift.meta_data.FieldMetaData("amount", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PACKAGE_ID, new org.apache.thrift.meta_data.FieldMetaData("packageId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PACKAGE_NAME, new org.apache.thrift.meta_data.FieldMetaData("packageName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TEACHER_ID, new org.apache.thrift.meta_data.FieldMetaData("teacherId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TEACHER_EMAIL, new org.apache.thrift.meta_data.FieldMetaData("teacherEmail", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORD_STATUS, new org.apache.thrift.meta_data.FieldMetaData("ordStatus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORD_DETAIL_ID, new org.apache.thrift.meta_data.FieldMetaData("ordDetailId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BIZ_DATE, new org.apache.thrift.meta_data.FieldMetaData("bizDate", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SECOND_PROJ_ID, new org.apache.thrift.meta_data.FieldMetaData("secondProjId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SECOND_PROJ_NAME, new org.apache.thrift.meta_data.FieldMetaData("secondProjName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FAMILY_ID, new org.apache.thrift.meta_data.FieldMetaData("familyId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.STU_IM_ID, new org.apache.thrift.meta_data.FieldMetaData("stuImId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FIRST_PROJ_ID, new org.apache.thrift.meta_data.FieldMetaData("firstProjId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FIRST_PROJ_NAME, new org.apache.thrift.meta_data.FieldMetaData("firstProjName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STU_ID, new org.apache.thrift.meta_data.FieldMetaData("stuId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.STU_NAME, new org.apache.thrift.meta_data.FieldMetaData("stuName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STU_NICK_NAME, new org.apache.thrift.meta_data.FieldMetaData("stuNickName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STU_PHONE, new org.apache.thrift.meta_data.FieldMetaData("stuPhone", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROVINCE_ID, new org.apache.thrift.meta_data.FieldMetaData("provinceId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROVINCE_NAME, new org.apache.thrift.meta_data.FieldMetaData("provinceName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.USER_ID, new org.apache.thrift.meta_data.FieldMetaData("userId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TAGS, new org.apache.thrift.meta_data.FieldMetaData("tags", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT            , "UserTag"))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(OrdServiceTeam.class, metaDataMap);
  }

  public OrdServiceTeam() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public OrdServiceTeam(OrdServiceTeam other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetApplyDate()) {
      this.applyDate = other.applyDate;
    }
    this.collegeId = other.collegeId;
    if (other.isSetCollegeName()) {
      this.collegeName = other.collegeName;
    }
    if (other.isSetFamilyName()) {
      this.familyName = other.familyName;
    }
    if (other.isSetCodeName()) {
      this.codeName = other.codeName;
    }
    if (other.isSetTeacherName()) {
      this.teacherName = other.teacherName;
    }
    this.amount = other.amount;
    this.packageId = other.packageId;
    if (other.isSetPackageName()) {
      this.packageName = other.packageName;
    }
    this.teacherId = other.teacherId;
    if (other.isSetTeacherEmail()) {
      this.teacherEmail = other.teacherEmail;
    }
    if (other.isSetOrdStatus()) {
      this.ordStatus = other.ordStatus;
    }
    this.ordDetailId = other.ordDetailId;
    if (other.isSetBizDate()) {
      this.bizDate = other.bizDate;
    }
    this.secondProjId = other.secondProjId;
    if (other.isSetSecondProjName()) {
      this.secondProjName = other.secondProjName;
    }
    this.familyId = other.familyId;
    if (other.isSetStuImId()) {
      this.stuImId = other.stuImId;
    }
    this.firstProjId = other.firstProjId;
    if (other.isSetFirstProjName()) {
      this.firstProjName = other.firstProjName;
    }
    this.stuId = other.stuId;
    if (other.isSetStuName()) {
      this.stuName = other.stuName;
    }
    if (other.isSetStuNickName()) {
      this.stuNickName = other.stuNickName;
    }
    if (other.isSetStuPhone()) {
      this.stuPhone = other.stuPhone;
    }
    this.provinceId = other.provinceId;
    if (other.isSetProvinceName()) {
      this.provinceName = other.provinceName;
    }
    this.userId = other.userId;
    if (other.isSetTags()) {
      List<UserTag> __this__tags = new ArrayList<UserTag>(other.tags.size());
      for (UserTag other_element : other.tags) {
        __this__tags.add(other_element);
      }
      this.tags = __this__tags;
    }
  }

  public OrdServiceTeam deepCopy() {
    return new OrdServiceTeam(this);
  }

  @Override
  public void clear() {
    this.applyDate = null;
    setCollegeIdIsSet(false);
    this.collegeId = 0;
    this.collegeName = null;
    this.familyName = null;
    this.codeName = null;
    this.teacherName = null;
    setAmountIsSet(false);
    this.amount = 0;
    setPackageIdIsSet(false);
    this.packageId = 0;
    this.packageName = null;
    setTeacherIdIsSet(false);
    this.teacherId = 0;
    this.teacherEmail = null;
    this.ordStatus = null;
    setOrdDetailIdIsSet(false);
    this.ordDetailId = 0;
    this.bizDate = null;
    setSecondProjIdIsSet(false);
    this.secondProjId = 0;
    this.secondProjName = null;
    setFamilyIdIsSet(false);
    this.familyId = 0;
    this.stuImId = null;
    setFirstProjIdIsSet(false);
    this.firstProjId = 0;
    this.firstProjName = null;
    setStuIdIsSet(false);
    this.stuId = 0;
    this.stuName = null;
    this.stuNickName = null;
    this.stuPhone = null;
    setProvinceIdIsSet(false);
    this.provinceId = 0;
    this.provinceName = null;
    setUserIdIsSet(false);
    this.userId = 0;
    this.tags = null;
  }

  public String getApplyDate() {
    return this.applyDate;
  }

  public OrdServiceTeam setApplyDate(String applyDate) {
    this.applyDate = applyDate;
    return this;
  }

  public void unsetApplyDate() {
    this.applyDate = null;
  }

  /** Returns true if field applyDate is set (has been assigned a value) and false otherwise */
  public boolean isSetApplyDate() {
    return this.applyDate != null;
  }

  public void setApplyDateIsSet(boolean value) {
    if (!value) {
      this.applyDate = null;
    }
  }

  public int getCollegeId() {
    return this.collegeId;
  }

  public OrdServiceTeam setCollegeId(int collegeId) {
    this.collegeId = collegeId;
    setCollegeIdIsSet(true);
    return this;
  }

  public void unsetCollegeId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __COLLEGEID_ISSET_ID);
  }

  /** Returns true if field collegeId is set (has been assigned a value) and false otherwise */
  public boolean isSetCollegeId() {
    return EncodingUtils.testBit(__isset_bitfield, __COLLEGEID_ISSET_ID);
  }

  public void setCollegeIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __COLLEGEID_ISSET_ID, value);
  }

  public String getCollegeName() {
    return this.collegeName;
  }

  public OrdServiceTeam setCollegeName(String collegeName) {
    this.collegeName = collegeName;
    return this;
  }

  public void unsetCollegeName() {
    this.collegeName = null;
  }

  /** Returns true if field collegeName is set (has been assigned a value) and false otherwise */
  public boolean isSetCollegeName() {
    return this.collegeName != null;
  }

  public void setCollegeNameIsSet(boolean value) {
    if (!value) {
      this.collegeName = null;
    }
  }

  public String getFamilyName() {
    return this.familyName;
  }

  public OrdServiceTeam setFamilyName(String familyName) {
    this.familyName = familyName;
    return this;
  }

  public void unsetFamilyName() {
    this.familyName = null;
  }

  /** Returns true if field familyName is set (has been assigned a value) and false otherwise */
  public boolean isSetFamilyName() {
    return this.familyName != null;
  }

  public void setFamilyNameIsSet(boolean value) {
    if (!value) {
      this.familyName = null;
    }
  }

  public String getCodeName() {
    return this.codeName;
  }

  public OrdServiceTeam setCodeName(String codeName) {
    this.codeName = codeName;
    return this;
  }

  public void unsetCodeName() {
    this.codeName = null;
  }

  /** Returns true if field codeName is set (has been assigned a value) and false otherwise */
  public boolean isSetCodeName() {
    return this.codeName != null;
  }

  public void setCodeNameIsSet(boolean value) {
    if (!value) {
      this.codeName = null;
    }
  }

  public String getTeacherName() {
    return this.teacherName;
  }

  public OrdServiceTeam setTeacherName(String teacherName) {
    this.teacherName = teacherName;
    return this;
  }

  public void unsetTeacherName() {
    this.teacherName = null;
  }

  /** Returns true if field teacherName is set (has been assigned a value) and false otherwise */
  public boolean isSetTeacherName() {
    return this.teacherName != null;
  }

  public void setTeacherNameIsSet(boolean value) {
    if (!value) {
      this.teacherName = null;
    }
  }

  public int getAmount() {
    return this.amount;
  }

  public OrdServiceTeam setAmount(int amount) {
    this.amount = amount;
    setAmountIsSet(true);
    return this;
  }

  public void unsetAmount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __AMOUNT_ISSET_ID);
  }

  /** Returns true if field amount is set (has been assigned a value) and false otherwise */
  public boolean isSetAmount() {
    return EncodingUtils.testBit(__isset_bitfield, __AMOUNT_ISSET_ID);
  }

  public void setAmountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __AMOUNT_ISSET_ID, value);
  }

  public int getPackageId() {
    return this.packageId;
  }

  public OrdServiceTeam setPackageId(int packageId) {
    this.packageId = packageId;
    setPackageIdIsSet(true);
    return this;
  }

  public void unsetPackageId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PACKAGEID_ISSET_ID);
  }

  /** Returns true if field packageId is set (has been assigned a value) and false otherwise */
  public boolean isSetPackageId() {
    return EncodingUtils.testBit(__isset_bitfield, __PACKAGEID_ISSET_ID);
  }

  public void setPackageIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PACKAGEID_ISSET_ID, value);
  }

  public String getPackageName() {
    return this.packageName;
  }

  public OrdServiceTeam setPackageName(String packageName) {
    this.packageName = packageName;
    return this;
  }

  public void unsetPackageName() {
    this.packageName = null;
  }

  /** Returns true if field packageName is set (has been assigned a value) and false otherwise */
  public boolean isSetPackageName() {
    return this.packageName != null;
  }

  public void setPackageNameIsSet(boolean value) {
    if (!value) {
      this.packageName = null;
    }
  }

  public int getTeacherId() {
    return this.teacherId;
  }

  public OrdServiceTeam setTeacherId(int teacherId) {
    this.teacherId = teacherId;
    setTeacherIdIsSet(true);
    return this;
  }

  public void unsetTeacherId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TEACHERID_ISSET_ID);
  }

  /** Returns true if field teacherId is set (has been assigned a value) and false otherwise */
  public boolean isSetTeacherId() {
    return EncodingUtils.testBit(__isset_bitfield, __TEACHERID_ISSET_ID);
  }

  public void setTeacherIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TEACHERID_ISSET_ID, value);
  }

  public String getTeacherEmail() {
    return this.teacherEmail;
  }

  public OrdServiceTeam setTeacherEmail(String teacherEmail) {
    this.teacherEmail = teacherEmail;
    return this;
  }

  public void unsetTeacherEmail() {
    this.teacherEmail = null;
  }

  /** Returns true if field teacherEmail is set (has been assigned a value) and false otherwise */
  public boolean isSetTeacherEmail() {
    return this.teacherEmail != null;
  }

  public void setTeacherEmailIsSet(boolean value) {
    if (!value) {
      this.teacherEmail = null;
    }
  }

  public String getOrdStatus() {
    return this.ordStatus;
  }

  public OrdServiceTeam setOrdStatus(String ordStatus) {
    this.ordStatus = ordStatus;
    return this;
  }

  public void unsetOrdStatus() {
    this.ordStatus = null;
  }

  /** Returns true if field ordStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetOrdStatus() {
    return this.ordStatus != null;
  }

  public void setOrdStatusIsSet(boolean value) {
    if (!value) {
      this.ordStatus = null;
    }
  }

  public int getOrdDetailId() {
    return this.ordDetailId;
  }

  public OrdServiceTeam setOrdDetailId(int ordDetailId) {
    this.ordDetailId = ordDetailId;
    setOrdDetailIdIsSet(true);
    return this;
  }

  public void unsetOrdDetailId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ORDDETAILID_ISSET_ID);
  }

  /** Returns true if field ordDetailId is set (has been assigned a value) and false otherwise */
  public boolean isSetOrdDetailId() {
    return EncodingUtils.testBit(__isset_bitfield, __ORDDETAILID_ISSET_ID);
  }

  public void setOrdDetailIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ORDDETAILID_ISSET_ID, value);
  }

  public String getBizDate() {
    return this.bizDate;
  }

  public OrdServiceTeam setBizDate(String bizDate) {
    this.bizDate = bizDate;
    return this;
  }

  public void unsetBizDate() {
    this.bizDate = null;
  }

  /** Returns true if field bizDate is set (has been assigned a value) and false otherwise */
  public boolean isSetBizDate() {
    return this.bizDate != null;
  }

  public void setBizDateIsSet(boolean value) {
    if (!value) {
      this.bizDate = null;
    }
  }

  public int getSecondProjId() {
    return this.secondProjId;
  }

  public OrdServiceTeam setSecondProjId(int secondProjId) {
    this.secondProjId = secondProjId;
    setSecondProjIdIsSet(true);
    return this;
  }

  public void unsetSecondProjId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SECONDPROJID_ISSET_ID);
  }

  /** Returns true if field secondProjId is set (has been assigned a value) and false otherwise */
  public boolean isSetSecondProjId() {
    return EncodingUtils.testBit(__isset_bitfield, __SECONDPROJID_ISSET_ID);
  }

  public void setSecondProjIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SECONDPROJID_ISSET_ID, value);
  }

  public String getSecondProjName() {
    return this.secondProjName;
  }

  public OrdServiceTeam setSecondProjName(String secondProjName) {
    this.secondProjName = secondProjName;
    return this;
  }

  public void unsetSecondProjName() {
    this.secondProjName = null;
  }

  /** Returns true if field secondProjName is set (has been assigned a value) and false otherwise */
  public boolean isSetSecondProjName() {
    return this.secondProjName != null;
  }

  public void setSecondProjNameIsSet(boolean value) {
    if (!value) {
      this.secondProjName = null;
    }
  }

  public int getFamilyId() {
    return this.familyId;
  }

  public OrdServiceTeam setFamilyId(int familyId) {
    this.familyId = familyId;
    setFamilyIdIsSet(true);
    return this;
  }

  public void unsetFamilyId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __FAMILYID_ISSET_ID);
  }

  /** Returns true if field familyId is set (has been assigned a value) and false otherwise */
  public boolean isSetFamilyId() {
    return EncodingUtils.testBit(__isset_bitfield, __FAMILYID_ISSET_ID);
  }

  public void setFamilyIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __FAMILYID_ISSET_ID, value);
  }

  public String getStuImId() {
    return this.stuImId;
  }

  public OrdServiceTeam setStuImId(String stuImId) {
    this.stuImId = stuImId;
    return this;
  }

  public void unsetStuImId() {
    this.stuImId = null;
  }

  /** Returns true if field stuImId is set (has been assigned a value) and false otherwise */
  public boolean isSetStuImId() {
    return this.stuImId != null;
  }

  public void setStuImIdIsSet(boolean value) {
    if (!value) {
      this.stuImId = null;
    }
  }

  public int getFirstProjId() {
    return this.firstProjId;
  }

  public OrdServiceTeam setFirstProjId(int firstProjId) {
    this.firstProjId = firstProjId;
    setFirstProjIdIsSet(true);
    return this;
  }

  public void unsetFirstProjId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __FIRSTPROJID_ISSET_ID);
  }

  /** Returns true if field firstProjId is set (has been assigned a value) and false otherwise */
  public boolean isSetFirstProjId() {
    return EncodingUtils.testBit(__isset_bitfield, __FIRSTPROJID_ISSET_ID);
  }

  public void setFirstProjIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __FIRSTPROJID_ISSET_ID, value);
  }

  public String getFirstProjName() {
    return this.firstProjName;
  }

  public OrdServiceTeam setFirstProjName(String firstProjName) {
    this.firstProjName = firstProjName;
    return this;
  }

  public void unsetFirstProjName() {
    this.firstProjName = null;
  }

  /** Returns true if field firstProjName is set (has been assigned a value) and false otherwise */
  public boolean isSetFirstProjName() {
    return this.firstProjName != null;
  }

  public void setFirstProjNameIsSet(boolean value) {
    if (!value) {
      this.firstProjName = null;
    }
  }

  public int getStuId() {
    return this.stuId;
  }

  public OrdServiceTeam setStuId(int stuId) {
    this.stuId = stuId;
    setStuIdIsSet(true);
    return this;
  }

  public void unsetStuId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STUID_ISSET_ID);
  }

  /** Returns true if field stuId is set (has been assigned a value) and false otherwise */
  public boolean isSetStuId() {
    return EncodingUtils.testBit(__isset_bitfield, __STUID_ISSET_ID);
  }

  public void setStuIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STUID_ISSET_ID, value);
  }

  public String getStuName() {
    return this.stuName;
  }

  public OrdServiceTeam setStuName(String stuName) {
    this.stuName = stuName;
    return this;
  }

  public void unsetStuName() {
    this.stuName = null;
  }

  /** Returns true if field stuName is set (has been assigned a value) and false otherwise */
  public boolean isSetStuName() {
    return this.stuName != null;
  }

  public void setStuNameIsSet(boolean value) {
    if (!value) {
      this.stuName = null;
    }
  }

  public String getStuNickName() {
    return this.stuNickName;
  }

  public OrdServiceTeam setStuNickName(String stuNickName) {
    this.stuNickName = stuNickName;
    return this;
  }

  public void unsetStuNickName() {
    this.stuNickName = null;
  }

  /** Returns true if field stuNickName is set (has been assigned a value) and false otherwise */
  public boolean isSetStuNickName() {
    return this.stuNickName != null;
  }

  public void setStuNickNameIsSet(boolean value) {
    if (!value) {
      this.stuNickName = null;
    }
  }

  public String getStuPhone() {
    return this.stuPhone;
  }

  public OrdServiceTeam setStuPhone(String stuPhone) {
    this.stuPhone = stuPhone;
    return this;
  }

  public void unsetStuPhone() {
    this.stuPhone = null;
  }

  /** Returns true if field stuPhone is set (has been assigned a value) and false otherwise */
  public boolean isSetStuPhone() {
    return this.stuPhone != null;
  }

  public void setStuPhoneIsSet(boolean value) {
    if (!value) {
      this.stuPhone = null;
    }
  }

  public int getProvinceId() {
    return this.provinceId;
  }

  public OrdServiceTeam setProvinceId(int provinceId) {
    this.provinceId = provinceId;
    setProvinceIdIsSet(true);
    return this;
  }

  public void unsetProvinceId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PROVINCEID_ISSET_ID);
  }

  /** Returns true if field provinceId is set (has been assigned a value) and false otherwise */
  public boolean isSetProvinceId() {
    return EncodingUtils.testBit(__isset_bitfield, __PROVINCEID_ISSET_ID);
  }

  public void setProvinceIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PROVINCEID_ISSET_ID, value);
  }

  public String getProvinceName() {
    return this.provinceName;
  }

  public OrdServiceTeam setProvinceName(String provinceName) {
    this.provinceName = provinceName;
    return this;
  }

  public void unsetProvinceName() {
    this.provinceName = null;
  }

  /** Returns true if field provinceName is set (has been assigned a value) and false otherwise */
  public boolean isSetProvinceName() {
    return this.provinceName != null;
  }

  public void setProvinceNameIsSet(boolean value) {
    if (!value) {
      this.provinceName = null;
    }
  }

  public int getUserId() {
    return this.userId;
  }

  public OrdServiceTeam setUserId(int userId) {
    this.userId = userId;
    setUserIdIsSet(true);
    return this;
  }

  public void unsetUserId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __USERID_ISSET_ID);
  }

  /** Returns true if field userId is set (has been assigned a value) and false otherwise */
  public boolean isSetUserId() {
    return EncodingUtils.testBit(__isset_bitfield, __USERID_ISSET_ID);
  }

  public void setUserIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __USERID_ISSET_ID, value);
  }

  public int getTagsSize() {
    return (this.tags == null) ? 0 : this.tags.size();
  }

  public java.util.Iterator<UserTag> getTagsIterator() {
    return (this.tags == null) ? null : this.tags.iterator();
  }

  public void addToTags(UserTag elem) {
    if (this.tags == null) {
      this.tags = new ArrayList<UserTag>();
    }
    this.tags.add(elem);
  }

  public List<UserTag> getTags() {
    return this.tags;
  }

  public OrdServiceTeam setTags(List<UserTag> tags) {
    this.tags = tags;
    return this;
  }

  public void unsetTags() {
    this.tags = null;
  }

  /** Returns true if field tags is set (has been assigned a value) and false otherwise */
  public boolean isSetTags() {
    return this.tags != null;
  }

  public void setTagsIsSet(boolean value) {
    if (!value) {
      this.tags = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case APPLY_DATE:
      if (value == null) {
        unsetApplyDate();
      } else {
        setApplyDate((String)value);
      }
      break;

    case COLLEGE_ID:
      if (value == null) {
        unsetCollegeId();
      } else {
        setCollegeId((Integer)value);
      }
      break;

    case COLLEGE_NAME:
      if (value == null) {
        unsetCollegeName();
      } else {
        setCollegeName((String)value);
      }
      break;

    case FAMILY_NAME:
      if (value == null) {
        unsetFamilyName();
      } else {
        setFamilyName((String)value);
      }
      break;

    case CODE_NAME:
      if (value == null) {
        unsetCodeName();
      } else {
        setCodeName((String)value);
      }
      break;

    case TEACHER_NAME:
      if (value == null) {
        unsetTeacherName();
      } else {
        setTeacherName((String)value);
      }
      break;

    case AMOUNT:
      if (value == null) {
        unsetAmount();
      } else {
        setAmount((Integer)value);
      }
      break;

    case PACKAGE_ID:
      if (value == null) {
        unsetPackageId();
      } else {
        setPackageId((Integer)value);
      }
      break;

    case PACKAGE_NAME:
      if (value == null) {
        unsetPackageName();
      } else {
        setPackageName((String)value);
      }
      break;

    case TEACHER_ID:
      if (value == null) {
        unsetTeacherId();
      } else {
        setTeacherId((Integer)value);
      }
      break;

    case TEACHER_EMAIL:
      if (value == null) {
        unsetTeacherEmail();
      } else {
        setTeacherEmail((String)value);
      }
      break;

    case ORD_STATUS:
      if (value == null) {
        unsetOrdStatus();
      } else {
        setOrdStatus((String)value);
      }
      break;

    case ORD_DETAIL_ID:
      if (value == null) {
        unsetOrdDetailId();
      } else {
        setOrdDetailId((Integer)value);
      }
      break;

    case BIZ_DATE:
      if (value == null) {
        unsetBizDate();
      } else {
        setBizDate((String)value);
      }
      break;

    case SECOND_PROJ_ID:
      if (value == null) {
        unsetSecondProjId();
      } else {
        setSecondProjId((Integer)value);
      }
      break;

    case SECOND_PROJ_NAME:
      if (value == null) {
        unsetSecondProjName();
      } else {
        setSecondProjName((String)value);
      }
      break;

    case FAMILY_ID:
      if (value == null) {
        unsetFamilyId();
      } else {
        setFamilyId((Integer)value);
      }
      break;

    case STU_IM_ID:
      if (value == null) {
        unsetStuImId();
      } else {
        setStuImId((String)value);
      }
      break;

    case FIRST_PROJ_ID:
      if (value == null) {
        unsetFirstProjId();
      } else {
        setFirstProjId((Integer)value);
      }
      break;

    case FIRST_PROJ_NAME:
      if (value == null) {
        unsetFirstProjName();
      } else {
        setFirstProjName((String)value);
      }
      break;

    case STU_ID:
      if (value == null) {
        unsetStuId();
      } else {
        setStuId((Integer)value);
      }
      break;

    case STU_NAME:
      if (value == null) {
        unsetStuName();
      } else {
        setStuName((String)value);
      }
      break;

    case STU_NICK_NAME:
      if (value == null) {
        unsetStuNickName();
      } else {
        setStuNickName((String)value);
      }
      break;

    case STU_PHONE:
      if (value == null) {
        unsetStuPhone();
      } else {
        setStuPhone((String)value);
      }
      break;

    case PROVINCE_ID:
      if (value == null) {
        unsetProvinceId();
      } else {
        setProvinceId((Integer)value);
      }
      break;

    case PROVINCE_NAME:
      if (value == null) {
        unsetProvinceName();
      } else {
        setProvinceName((String)value);
      }
      break;

    case USER_ID:
      if (value == null) {
        unsetUserId();
      } else {
        setUserId((Integer)value);
      }
      break;

    case TAGS:
      if (value == null) {
        unsetTags();
      } else {
        setTags((List<UserTag>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case APPLY_DATE:
      return getApplyDate();

    case COLLEGE_ID:
      return getCollegeId();

    case COLLEGE_NAME:
      return getCollegeName();

    case FAMILY_NAME:
      return getFamilyName();

    case CODE_NAME:
      return getCodeName();

    case TEACHER_NAME:
      return getTeacherName();

    case AMOUNT:
      return getAmount();

    case PACKAGE_ID:
      return getPackageId();

    case PACKAGE_NAME:
      return getPackageName();

    case TEACHER_ID:
      return getTeacherId();

    case TEACHER_EMAIL:
      return getTeacherEmail();

    case ORD_STATUS:
      return getOrdStatus();

    case ORD_DETAIL_ID:
      return getOrdDetailId();

    case BIZ_DATE:
      return getBizDate();

    case SECOND_PROJ_ID:
      return getSecondProjId();

    case SECOND_PROJ_NAME:
      return getSecondProjName();

    case FAMILY_ID:
      return getFamilyId();

    case STU_IM_ID:
      return getStuImId();

    case FIRST_PROJ_ID:
      return getFirstProjId();

    case FIRST_PROJ_NAME:
      return getFirstProjName();

    case STU_ID:
      return getStuId();

    case STU_NAME:
      return getStuName();

    case STU_NICK_NAME:
      return getStuNickName();

    case STU_PHONE:
      return getStuPhone();

    case PROVINCE_ID:
      return getProvinceId();

    case PROVINCE_NAME:
      return getProvinceName();

    case USER_ID:
      return getUserId();

    case TAGS:
      return getTags();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case APPLY_DATE:
      return isSetApplyDate();
    case COLLEGE_ID:
      return isSetCollegeId();
    case COLLEGE_NAME:
      return isSetCollegeName();
    case FAMILY_NAME:
      return isSetFamilyName();
    case CODE_NAME:
      return isSetCodeName();
    case TEACHER_NAME:
      return isSetTeacherName();
    case AMOUNT:
      return isSetAmount();
    case PACKAGE_ID:
      return isSetPackageId();
    case PACKAGE_NAME:
      return isSetPackageName();
    case TEACHER_ID:
      return isSetTeacherId();
    case TEACHER_EMAIL:
      return isSetTeacherEmail();
    case ORD_STATUS:
      return isSetOrdStatus();
    case ORD_DETAIL_ID:
      return isSetOrdDetailId();
    case BIZ_DATE:
      return isSetBizDate();
    case SECOND_PROJ_ID:
      return isSetSecondProjId();
    case SECOND_PROJ_NAME:
      return isSetSecondProjName();
    case FAMILY_ID:
      return isSetFamilyId();
    case STU_IM_ID:
      return isSetStuImId();
    case FIRST_PROJ_ID:
      return isSetFirstProjId();
    case FIRST_PROJ_NAME:
      return isSetFirstProjName();
    case STU_ID:
      return isSetStuId();
    case STU_NAME:
      return isSetStuName();
    case STU_NICK_NAME:
      return isSetStuNickName();
    case STU_PHONE:
      return isSetStuPhone();
    case PROVINCE_ID:
      return isSetProvinceId();
    case PROVINCE_NAME:
      return isSetProvinceName();
    case USER_ID:
      return isSetUserId();
    case TAGS:
      return isSetTags();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof OrdServiceTeam)
      return this.equals((OrdServiceTeam)that);
    return false;
  }

  public boolean equals(OrdServiceTeam that) {
    if (that == null)
      return false;

    boolean this_present_applyDate = true && this.isSetApplyDate();
    boolean that_present_applyDate = true && that.isSetApplyDate();
    if (this_present_applyDate || that_present_applyDate) {
      if (!(this_present_applyDate && that_present_applyDate))
        return false;
      if (!this.applyDate.equals(that.applyDate))
        return false;
    }

    boolean this_present_collegeId = true && this.isSetCollegeId();
    boolean that_present_collegeId = true && that.isSetCollegeId();
    if (this_present_collegeId || that_present_collegeId) {
      if (!(this_present_collegeId && that_present_collegeId))
        return false;
      if (this.collegeId != that.collegeId)
        return false;
    }

    boolean this_present_collegeName = true && this.isSetCollegeName();
    boolean that_present_collegeName = true && that.isSetCollegeName();
    if (this_present_collegeName || that_present_collegeName) {
      if (!(this_present_collegeName && that_present_collegeName))
        return false;
      if (!this.collegeName.equals(that.collegeName))
        return false;
    }

    boolean this_present_familyName = true && this.isSetFamilyName();
    boolean that_present_familyName = true && that.isSetFamilyName();
    if (this_present_familyName || that_present_familyName) {
      if (!(this_present_familyName && that_present_familyName))
        return false;
      if (!this.familyName.equals(that.familyName))
        return false;
    }

    boolean this_present_codeName = true && this.isSetCodeName();
    boolean that_present_codeName = true && that.isSetCodeName();
    if (this_present_codeName || that_present_codeName) {
      if (!(this_present_codeName && that_present_codeName))
        return false;
      if (!this.codeName.equals(that.codeName))
        return false;
    }

    boolean this_present_teacherName = true && this.isSetTeacherName();
    boolean that_present_teacherName = true && that.isSetTeacherName();
    if (this_present_teacherName || that_present_teacherName) {
      if (!(this_present_teacherName && that_present_teacherName))
        return false;
      if (!this.teacherName.equals(that.teacherName))
        return false;
    }

    boolean this_present_amount = true && this.isSetAmount();
    boolean that_present_amount = true && that.isSetAmount();
    if (this_present_amount || that_present_amount) {
      if (!(this_present_amount && that_present_amount))
        return false;
      if (this.amount != that.amount)
        return false;
    }

    boolean this_present_packageId = true && this.isSetPackageId();
    boolean that_present_packageId = true && that.isSetPackageId();
    if (this_present_packageId || that_present_packageId) {
      if (!(this_present_packageId && that_present_packageId))
        return false;
      if (this.packageId != that.packageId)
        return false;
    }

    boolean this_present_packageName = true && this.isSetPackageName();
    boolean that_present_packageName = true && that.isSetPackageName();
    if (this_present_packageName || that_present_packageName) {
      if (!(this_present_packageName && that_present_packageName))
        return false;
      if (!this.packageName.equals(that.packageName))
        return false;
    }

    boolean this_present_teacherId = true && this.isSetTeacherId();
    boolean that_present_teacherId = true && that.isSetTeacherId();
    if (this_present_teacherId || that_present_teacherId) {
      if (!(this_present_teacherId && that_present_teacherId))
        return false;
      if (this.teacherId != that.teacherId)
        return false;
    }

    boolean this_present_teacherEmail = true && this.isSetTeacherEmail();
    boolean that_present_teacherEmail = true && that.isSetTeacherEmail();
    if (this_present_teacherEmail || that_present_teacherEmail) {
      if (!(this_present_teacherEmail && that_present_teacherEmail))
        return false;
      if (!this.teacherEmail.equals(that.teacherEmail))
        return false;
    }

    boolean this_present_ordStatus = true && this.isSetOrdStatus();
    boolean that_present_ordStatus = true && that.isSetOrdStatus();
    if (this_present_ordStatus || that_present_ordStatus) {
      if (!(this_present_ordStatus && that_present_ordStatus))
        return false;
      if (!this.ordStatus.equals(that.ordStatus))
        return false;
    }

    boolean this_present_ordDetailId = true && this.isSetOrdDetailId();
    boolean that_present_ordDetailId = true && that.isSetOrdDetailId();
    if (this_present_ordDetailId || that_present_ordDetailId) {
      if (!(this_present_ordDetailId && that_present_ordDetailId))
        return false;
      if (this.ordDetailId != that.ordDetailId)
        return false;
    }

    boolean this_present_bizDate = true && this.isSetBizDate();
    boolean that_present_bizDate = true && that.isSetBizDate();
    if (this_present_bizDate || that_present_bizDate) {
      if (!(this_present_bizDate && that_present_bizDate))
        return false;
      if (!this.bizDate.equals(that.bizDate))
        return false;
    }

    boolean this_present_secondProjId = true && this.isSetSecondProjId();
    boolean that_present_secondProjId = true && that.isSetSecondProjId();
    if (this_present_secondProjId || that_present_secondProjId) {
      if (!(this_present_secondProjId && that_present_secondProjId))
        return false;
      if (this.secondProjId != that.secondProjId)
        return false;
    }

    boolean this_present_secondProjName = true && this.isSetSecondProjName();
    boolean that_present_secondProjName = true && that.isSetSecondProjName();
    if (this_present_secondProjName || that_present_secondProjName) {
      if (!(this_present_secondProjName && that_present_secondProjName))
        return false;
      if (!this.secondProjName.equals(that.secondProjName))
        return false;
    }

    boolean this_present_familyId = true && this.isSetFamilyId();
    boolean that_present_familyId = true && that.isSetFamilyId();
    if (this_present_familyId || that_present_familyId) {
      if (!(this_present_familyId && that_present_familyId))
        return false;
      if (this.familyId != that.familyId)
        return false;
    }

    boolean this_present_stuImId = true && this.isSetStuImId();
    boolean that_present_stuImId = true && that.isSetStuImId();
    if (this_present_stuImId || that_present_stuImId) {
      if (!(this_present_stuImId && that_present_stuImId))
        return false;
      if (!this.stuImId.equals(that.stuImId))
        return false;
    }

    boolean this_present_firstProjId = true && this.isSetFirstProjId();
    boolean that_present_firstProjId = true && that.isSetFirstProjId();
    if (this_present_firstProjId || that_present_firstProjId) {
      if (!(this_present_firstProjId && that_present_firstProjId))
        return false;
      if (this.firstProjId != that.firstProjId)
        return false;
    }

    boolean this_present_firstProjName = true && this.isSetFirstProjName();
    boolean that_present_firstProjName = true && that.isSetFirstProjName();
    if (this_present_firstProjName || that_present_firstProjName) {
      if (!(this_present_firstProjName && that_present_firstProjName))
        return false;
      if (!this.firstProjName.equals(that.firstProjName))
        return false;
    }

    boolean this_present_stuId = true && this.isSetStuId();
    boolean that_present_stuId = true && that.isSetStuId();
    if (this_present_stuId || that_present_stuId) {
      if (!(this_present_stuId && that_present_stuId))
        return false;
      if (this.stuId != that.stuId)
        return false;
    }

    boolean this_present_stuName = true && this.isSetStuName();
    boolean that_present_stuName = true && that.isSetStuName();
    if (this_present_stuName || that_present_stuName) {
      if (!(this_present_stuName && that_present_stuName))
        return false;
      if (!this.stuName.equals(that.stuName))
        return false;
    }

    boolean this_present_stuNickName = true && this.isSetStuNickName();
    boolean that_present_stuNickName = true && that.isSetStuNickName();
    if (this_present_stuNickName || that_present_stuNickName) {
      if (!(this_present_stuNickName && that_present_stuNickName))
        return false;
      if (!this.stuNickName.equals(that.stuNickName))
        return false;
    }

    boolean this_present_stuPhone = true && this.isSetStuPhone();
    boolean that_present_stuPhone = true && that.isSetStuPhone();
    if (this_present_stuPhone || that_present_stuPhone) {
      if (!(this_present_stuPhone && that_present_stuPhone))
        return false;
      if (!this.stuPhone.equals(that.stuPhone))
        return false;
    }

    boolean this_present_provinceId = true && this.isSetProvinceId();
    boolean that_present_provinceId = true && that.isSetProvinceId();
    if (this_present_provinceId || that_present_provinceId) {
      if (!(this_present_provinceId && that_present_provinceId))
        return false;
      if (this.provinceId != that.provinceId)
        return false;
    }

    boolean this_present_provinceName = true && this.isSetProvinceName();
    boolean that_present_provinceName = true && that.isSetProvinceName();
    if (this_present_provinceName || that_present_provinceName) {
      if (!(this_present_provinceName && that_present_provinceName))
        return false;
      if (!this.provinceName.equals(that.provinceName))
        return false;
    }

    boolean this_present_userId = true && this.isSetUserId();
    boolean that_present_userId = true && that.isSetUserId();
    if (this_present_userId || that_present_userId) {
      if (!(this_present_userId && that_present_userId))
        return false;
      if (this.userId != that.userId)
        return false;
    }

    boolean this_present_tags = true && this.isSetTags();
    boolean that_present_tags = true && that.isSetTags();
    if (this_present_tags || that_present_tags) {
      if (!(this_present_tags && that_present_tags))
        return false;
      if (!this.tags.equals(that.tags))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_applyDate = true && (isSetApplyDate());
    list.add(present_applyDate);
    if (present_applyDate)
      list.add(applyDate);

    boolean present_collegeId = true && (isSetCollegeId());
    list.add(present_collegeId);
    if (present_collegeId)
      list.add(collegeId);

    boolean present_collegeName = true && (isSetCollegeName());
    list.add(present_collegeName);
    if (present_collegeName)
      list.add(collegeName);

    boolean present_familyName = true && (isSetFamilyName());
    list.add(present_familyName);
    if (present_familyName)
      list.add(familyName);

    boolean present_codeName = true && (isSetCodeName());
    list.add(present_codeName);
    if (present_codeName)
      list.add(codeName);

    boolean present_teacherName = true && (isSetTeacherName());
    list.add(present_teacherName);
    if (present_teacherName)
      list.add(teacherName);

    boolean present_amount = true && (isSetAmount());
    list.add(present_amount);
    if (present_amount)
      list.add(amount);

    boolean present_packageId = true && (isSetPackageId());
    list.add(present_packageId);
    if (present_packageId)
      list.add(packageId);

    boolean present_packageName = true && (isSetPackageName());
    list.add(present_packageName);
    if (present_packageName)
      list.add(packageName);

    boolean present_teacherId = true && (isSetTeacherId());
    list.add(present_teacherId);
    if (present_teacherId)
      list.add(teacherId);

    boolean present_teacherEmail = true && (isSetTeacherEmail());
    list.add(present_teacherEmail);
    if (present_teacherEmail)
      list.add(teacherEmail);

    boolean present_ordStatus = true && (isSetOrdStatus());
    list.add(present_ordStatus);
    if (present_ordStatus)
      list.add(ordStatus);

    boolean present_ordDetailId = true && (isSetOrdDetailId());
    list.add(present_ordDetailId);
    if (present_ordDetailId)
      list.add(ordDetailId);

    boolean present_bizDate = true && (isSetBizDate());
    list.add(present_bizDate);
    if (present_bizDate)
      list.add(bizDate);

    boolean present_secondProjId = true && (isSetSecondProjId());
    list.add(present_secondProjId);
    if (present_secondProjId)
      list.add(secondProjId);

    boolean present_secondProjName = true && (isSetSecondProjName());
    list.add(present_secondProjName);
    if (present_secondProjName)
      list.add(secondProjName);

    boolean present_familyId = true && (isSetFamilyId());
    list.add(present_familyId);
    if (present_familyId)
      list.add(familyId);

    boolean present_stuImId = true && (isSetStuImId());
    list.add(present_stuImId);
    if (present_stuImId)
      list.add(stuImId);

    boolean present_firstProjId = true && (isSetFirstProjId());
    list.add(present_firstProjId);
    if (present_firstProjId)
      list.add(firstProjId);

    boolean present_firstProjName = true && (isSetFirstProjName());
    list.add(present_firstProjName);
    if (present_firstProjName)
      list.add(firstProjName);

    boolean present_stuId = true && (isSetStuId());
    list.add(present_stuId);
    if (present_stuId)
      list.add(stuId);

    boolean present_stuName = true && (isSetStuName());
    list.add(present_stuName);
    if (present_stuName)
      list.add(stuName);

    boolean present_stuNickName = true && (isSetStuNickName());
    list.add(present_stuNickName);
    if (present_stuNickName)
      list.add(stuNickName);

    boolean present_stuPhone = true && (isSetStuPhone());
    list.add(present_stuPhone);
    if (present_stuPhone)
      list.add(stuPhone);

    boolean present_provinceId = true && (isSetProvinceId());
    list.add(present_provinceId);
    if (present_provinceId)
      list.add(provinceId);

    boolean present_provinceName = true && (isSetProvinceName());
    list.add(present_provinceName);
    if (present_provinceName)
      list.add(provinceName);

    boolean present_userId = true && (isSetUserId());
    list.add(present_userId);
    if (present_userId)
      list.add(userId);

    boolean present_tags = true && (isSetTags());
    list.add(present_tags);
    if (present_tags)
      list.add(tags);

    return list.hashCode();
  }

  @Override
  public int compareTo(OrdServiceTeam other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetApplyDate()).compareTo(other.isSetApplyDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplyDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applyDate, other.applyDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCollegeId()).compareTo(other.isSetCollegeId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCollegeId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.collegeId, other.collegeId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCollegeName()).compareTo(other.isSetCollegeName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCollegeName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.collegeName, other.collegeName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFamilyName()).compareTo(other.isSetFamilyName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFamilyName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.familyName, other.familyName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCodeName()).compareTo(other.isSetCodeName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCodeName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.codeName, other.codeName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTeacherName()).compareTo(other.isSetTeacherName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTeacherName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.teacherName, other.teacherName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAmount()).compareTo(other.isSetAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAmount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.amount, other.amount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPackageId()).compareTo(other.isSetPackageId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPackageId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.packageId, other.packageId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPackageName()).compareTo(other.isSetPackageName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPackageName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.packageName, other.packageName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTeacherId()).compareTo(other.isSetTeacherId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTeacherId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.teacherId, other.teacherId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTeacherEmail()).compareTo(other.isSetTeacherEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTeacherEmail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.teacherEmail, other.teacherEmail);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrdStatus()).compareTo(other.isSetOrdStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrdStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ordStatus, other.ordStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrdDetailId()).compareTo(other.isSetOrdDetailId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrdDetailId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ordDetailId, other.ordDetailId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBizDate()).compareTo(other.isSetBizDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBizDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bizDate, other.bizDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSecondProjId()).compareTo(other.isSetSecondProjId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSecondProjId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.secondProjId, other.secondProjId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSecondProjName()).compareTo(other.isSetSecondProjName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSecondProjName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.secondProjName, other.secondProjName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFamilyId()).compareTo(other.isSetFamilyId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFamilyId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.familyId, other.familyId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStuImId()).compareTo(other.isSetStuImId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStuImId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stuImId, other.stuImId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFirstProjId()).compareTo(other.isSetFirstProjId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFirstProjId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.firstProjId, other.firstProjId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFirstProjName()).compareTo(other.isSetFirstProjName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFirstProjName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.firstProjName, other.firstProjName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStuId()).compareTo(other.isSetStuId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStuId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stuId, other.stuId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStuName()).compareTo(other.isSetStuName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStuName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stuName, other.stuName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStuNickName()).compareTo(other.isSetStuNickName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStuNickName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stuNickName, other.stuNickName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStuPhone()).compareTo(other.isSetStuPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStuPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stuPhone, other.stuPhone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProvinceId()).compareTo(other.isSetProvinceId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProvinceId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.provinceId, other.provinceId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProvinceName()).compareTo(other.isSetProvinceName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProvinceName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.provinceName, other.provinceName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserId()).compareTo(other.isSetUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userId, other.userId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTags()).compareTo(other.isSetTags());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTags()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tags, other.tags);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("OrdServiceTeam(");
    boolean first = true;

    if (isSetApplyDate()) {
      sb.append("applyDate:");
      if (this.applyDate == null) {
        sb.append("null");
      } else {
        sb.append(this.applyDate);
      }
      first = false;
    }
    if (isSetCollegeId()) {
      if (!first) sb.append(", ");
      sb.append("collegeId:");
      sb.append(this.collegeId);
      first = false;
    }
    if (isSetCollegeName()) {
      if (!first) sb.append(", ");
      sb.append("collegeName:");
      if (this.collegeName == null) {
        sb.append("null");
      } else {
        sb.append(this.collegeName);
      }
      first = false;
    }
    if (isSetFamilyName()) {
      if (!first) sb.append(", ");
      sb.append("familyName:");
      if (this.familyName == null) {
        sb.append("null");
      } else {
        sb.append(this.familyName);
      }
      first = false;
    }
    if (isSetCodeName()) {
      if (!first) sb.append(", ");
      sb.append("codeName:");
      if (this.codeName == null) {
        sb.append("null");
      } else {
        sb.append(this.codeName);
      }
      first = false;
    }
    if (isSetTeacherName()) {
      if (!first) sb.append(", ");
      sb.append("teacherName:");
      if (this.teacherName == null) {
        sb.append("null");
      } else {
        sb.append(this.teacherName);
      }
      first = false;
    }
    if (isSetAmount()) {
      if (!first) sb.append(", ");
      sb.append("amount:");
      sb.append(this.amount);
      first = false;
    }
    if (isSetPackageId()) {
      if (!first) sb.append(", ");
      sb.append("packageId:");
      sb.append(this.packageId);
      first = false;
    }
    if (isSetPackageName()) {
      if (!first) sb.append(", ");
      sb.append("packageName:");
      if (this.packageName == null) {
        sb.append("null");
      } else {
        sb.append(this.packageName);
      }
      first = false;
    }
    if (isSetTeacherId()) {
      if (!first) sb.append(", ");
      sb.append("teacherId:");
      sb.append(this.teacherId);
      first = false;
    }
    if (isSetTeacherEmail()) {
      if (!first) sb.append(", ");
      sb.append("teacherEmail:");
      if (this.teacherEmail == null) {
        sb.append("null");
      } else {
        sb.append(this.teacherEmail);
      }
      first = false;
    }
    if (isSetOrdStatus()) {
      if (!first) sb.append(", ");
      sb.append("ordStatus:");
      if (this.ordStatus == null) {
        sb.append("null");
      } else {
        sb.append(this.ordStatus);
      }
      first = false;
    }
    if (isSetOrdDetailId()) {
      if (!first) sb.append(", ");
      sb.append("ordDetailId:");
      sb.append(this.ordDetailId);
      first = false;
    }
    if (isSetBizDate()) {
      if (!first) sb.append(", ");
      sb.append("bizDate:");
      if (this.bizDate == null) {
        sb.append("null");
      } else {
        sb.append(this.bizDate);
      }
      first = false;
    }
    if (isSetSecondProjId()) {
      if (!first) sb.append(", ");
      sb.append("secondProjId:");
      sb.append(this.secondProjId);
      first = false;
    }
    if (isSetSecondProjName()) {
      if (!first) sb.append(", ");
      sb.append("secondProjName:");
      if (this.secondProjName == null) {
        sb.append("null");
      } else {
        sb.append(this.secondProjName);
      }
      first = false;
    }
    if (isSetFamilyId()) {
      if (!first) sb.append(", ");
      sb.append("familyId:");
      sb.append(this.familyId);
      first = false;
    }
    if (isSetStuImId()) {
      if (!first) sb.append(", ");
      sb.append("stuImId:");
      if (this.stuImId == null) {
        sb.append("null");
      } else {
        sb.append(this.stuImId);
      }
      first = false;
    }
    if (isSetFirstProjId()) {
      if (!first) sb.append(", ");
      sb.append("firstProjId:");
      sb.append(this.firstProjId);
      first = false;
    }
    if (isSetFirstProjName()) {
      if (!first) sb.append(", ");
      sb.append("firstProjName:");
      if (this.firstProjName == null) {
        sb.append("null");
      } else {
        sb.append(this.firstProjName);
      }
      first = false;
    }
    if (isSetStuId()) {
      if (!first) sb.append(", ");
      sb.append("stuId:");
      sb.append(this.stuId);
      first = false;
    }
    if (isSetStuName()) {
      if (!first) sb.append(", ");
      sb.append("stuName:");
      if (this.stuName == null) {
        sb.append("null");
      } else {
        sb.append(this.stuName);
      }
      first = false;
    }
    if (isSetStuNickName()) {
      if (!first) sb.append(", ");
      sb.append("stuNickName:");
      if (this.stuNickName == null) {
        sb.append("null");
      } else {
        sb.append(this.stuNickName);
      }
      first = false;
    }
    if (isSetStuPhone()) {
      if (!first) sb.append(", ");
      sb.append("stuPhone:");
      if (this.stuPhone == null) {
        sb.append("null");
      } else {
        sb.append(this.stuPhone);
      }
      first = false;
    }
    if (isSetProvinceId()) {
      if (!first) sb.append(", ");
      sb.append("provinceId:");
      sb.append(this.provinceId);
      first = false;
    }
    if (isSetProvinceName()) {
      if (!first) sb.append(", ");
      sb.append("provinceName:");
      if (this.provinceName == null) {
        sb.append("null");
      } else {
        sb.append(this.provinceName);
      }
      first = false;
    }
    if (isSetUserId()) {
      if (!first) sb.append(", ");
      sb.append("userId:");
      sb.append(this.userId);
      first = false;
    }
    if (isSetTags()) {
      if (!first) sb.append(", ");
      sb.append("tags:");
      if (this.tags == null) {
        sb.append("null");
      } else {
        sb.append(this.tags);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class OrdServiceTeamStandardSchemeFactory implements SchemeFactory {
    public OrdServiceTeamStandardScheme getScheme() {
      return new OrdServiceTeamStandardScheme();
    }
  }

  private static class OrdServiceTeamStandardScheme extends StandardScheme<OrdServiceTeam> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, OrdServiceTeam struct) throws TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // APPLY_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.applyDate = iprot.readString();
              struct.setApplyDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // COLLEGE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.collegeId = iprot.readI32();
              struct.setCollegeIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // COLLEGE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.collegeName = iprot.readString();
              struct.setCollegeNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // FAMILY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.familyName = iprot.readString();
              struct.setFamilyNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CODE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.codeName = iprot.readString();
              struct.setCodeNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // TEACHER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.teacherName = iprot.readString();
              struct.setTeacherNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // AMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.amount = iprot.readI32();
              struct.setAmountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PACKAGE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.packageId = iprot.readI32();
              struct.setPackageIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // PACKAGE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.packageName = iprot.readString();
              struct.setPackageNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // TEACHER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.teacherId = iprot.readI32();
              struct.setTeacherIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // TEACHER_EMAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.teacherEmail = iprot.readString();
              struct.setTeacherEmailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // ORD_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ordStatus = iprot.readString();
              struct.setOrdStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // ORD_DETAIL_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.ordDetailId = iprot.readI32();
              struct.setOrdDetailIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // BIZ_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bizDate = iprot.readString();
              struct.setBizDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // SECOND_PROJ_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.secondProjId = iprot.readI32();
              struct.setSecondProjIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // SECOND_PROJ_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.secondProjName = iprot.readString();
              struct.setSecondProjNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // FAMILY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.familyId = iprot.readI32();
              struct.setFamilyIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // STU_IM_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.stuImId = iprot.readString();
              struct.setStuImIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // FIRST_PROJ_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.firstProjId = iprot.readI32();
              struct.setFirstProjIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // FIRST_PROJ_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.firstProjName = iprot.readString();
              struct.setFirstProjNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // STU_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.stuId = iprot.readI32();
              struct.setStuIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // STU_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.stuName = iprot.readString();
              struct.setStuNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // STU_NICK_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.stuNickName = iprot.readString();
              struct.setStuNickNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // STU_PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.stuPhone = iprot.readString();
              struct.setStuPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // PROVINCE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.provinceId = iprot.readI32();
              struct.setProvinceIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // PROVINCE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.provinceName = iprot.readString();
              struct.setProvinceNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.userId = iprot.readI32();
              struct.setUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // TAGS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.tags = new ArrayList<UserTag>(_list0.size);
                UserTag _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = new UserTag();
                  _elem1.read(iprot);
                  struct.tags.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setTagsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, OrdServiceTeam struct) throws TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.applyDate != null) {
        if (struct.isSetApplyDate()) {
          oprot.writeFieldBegin(APPLY_DATE_FIELD_DESC);
          oprot.writeString(struct.applyDate);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetCollegeId()) {
        oprot.writeFieldBegin(COLLEGE_ID_FIELD_DESC);
        oprot.writeI32(struct.collegeId);
        oprot.writeFieldEnd();
      }
      if (struct.collegeName != null) {
        if (struct.isSetCollegeName()) {
          oprot.writeFieldBegin(COLLEGE_NAME_FIELD_DESC);
          oprot.writeString(struct.collegeName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.familyName != null) {
        if (struct.isSetFamilyName()) {
          oprot.writeFieldBegin(FAMILY_NAME_FIELD_DESC);
          oprot.writeString(struct.familyName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.codeName != null) {
        if (struct.isSetCodeName()) {
          oprot.writeFieldBegin(CODE_NAME_FIELD_DESC);
          oprot.writeString(struct.codeName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.teacherName != null) {
        if (struct.isSetTeacherName()) {
          oprot.writeFieldBegin(TEACHER_NAME_FIELD_DESC);
          oprot.writeString(struct.teacherName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetAmount()) {
        oprot.writeFieldBegin(AMOUNT_FIELD_DESC);
        oprot.writeI32(struct.amount);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPackageId()) {
        oprot.writeFieldBegin(PACKAGE_ID_FIELD_DESC);
        oprot.writeI32(struct.packageId);
        oprot.writeFieldEnd();
      }
      if (struct.packageName != null) {
        if (struct.isSetPackageName()) {
          oprot.writeFieldBegin(PACKAGE_NAME_FIELD_DESC);
          oprot.writeString(struct.packageName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetTeacherId()) {
        oprot.writeFieldBegin(TEACHER_ID_FIELD_DESC);
        oprot.writeI32(struct.teacherId);
        oprot.writeFieldEnd();
      }
      if (struct.teacherEmail != null) {
        if (struct.isSetTeacherEmail()) {
          oprot.writeFieldBegin(TEACHER_EMAIL_FIELD_DESC);
          oprot.writeString(struct.teacherEmail);
          oprot.writeFieldEnd();
        }
      }
      if (struct.ordStatus != null) {
        if (struct.isSetOrdStatus()) {
          oprot.writeFieldBegin(ORD_STATUS_FIELD_DESC);
          oprot.writeString(struct.ordStatus);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetOrdDetailId()) {
        oprot.writeFieldBegin(ORD_DETAIL_ID_FIELD_DESC);
        oprot.writeI32(struct.ordDetailId);
        oprot.writeFieldEnd();
      }
      if (struct.bizDate != null) {
        if (struct.isSetBizDate()) {
          oprot.writeFieldBegin(BIZ_DATE_FIELD_DESC);
          oprot.writeString(struct.bizDate);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetSecondProjId()) {
        oprot.writeFieldBegin(SECOND_PROJ_ID_FIELD_DESC);
        oprot.writeI32(struct.secondProjId);
        oprot.writeFieldEnd();
      }
      if (struct.secondProjName != null) {
        if (struct.isSetSecondProjName()) {
          oprot.writeFieldBegin(SECOND_PROJ_NAME_FIELD_DESC);
          oprot.writeString(struct.secondProjName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetFamilyId()) {
        oprot.writeFieldBegin(FAMILY_ID_FIELD_DESC);
        oprot.writeI32(struct.familyId);
        oprot.writeFieldEnd();
      }
      if (struct.stuImId != null) {
        if (struct.isSetStuImId()) {
          oprot.writeFieldBegin(STU_IM_ID_FIELD_DESC);
          oprot.writeString(struct.stuImId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetFirstProjId()) {
        oprot.writeFieldBegin(FIRST_PROJ_ID_FIELD_DESC);
        oprot.writeI32(struct.firstProjId);
        oprot.writeFieldEnd();
      }
      if (struct.firstProjName != null) {
        if (struct.isSetFirstProjName()) {
          oprot.writeFieldBegin(FIRST_PROJ_NAME_FIELD_DESC);
          oprot.writeString(struct.firstProjName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetStuId()) {
        oprot.writeFieldBegin(STU_ID_FIELD_DESC);
        oprot.writeI32(struct.stuId);
        oprot.writeFieldEnd();
      }
      if (struct.stuName != null) {
        if (struct.isSetStuName()) {
          oprot.writeFieldBegin(STU_NAME_FIELD_DESC);
          oprot.writeString(struct.stuName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.stuNickName != null) {
        if (struct.isSetStuNickName()) {
          oprot.writeFieldBegin(STU_NICK_NAME_FIELD_DESC);
          oprot.writeString(struct.stuNickName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.stuPhone != null) {
        if (struct.isSetStuPhone()) {
          oprot.writeFieldBegin(STU_PHONE_FIELD_DESC);
          oprot.writeString(struct.stuPhone);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetProvinceId()) {
        oprot.writeFieldBegin(PROVINCE_ID_FIELD_DESC);
        oprot.writeI32(struct.provinceId);
        oprot.writeFieldEnd();
      }
      if (struct.provinceName != null) {
        if (struct.isSetProvinceName()) {
          oprot.writeFieldBegin(PROVINCE_NAME_FIELD_DESC);
          oprot.writeString(struct.provinceName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetUserId()) {
        oprot.writeFieldBegin(USER_ID_FIELD_DESC);
        oprot.writeI32(struct.userId);
        oprot.writeFieldEnd();
      }
      if (struct.tags != null) {
        if (struct.isSetTags()) {
          oprot.writeFieldBegin(TAGS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.tags.size()));
            for (UserTag _iter3 : struct.tags)
            {
              _iter3.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class OrdServiceTeamTupleSchemeFactory implements SchemeFactory {
    public OrdServiceTeamTupleScheme getScheme() {
      return new OrdServiceTeamTupleScheme();
    }
  }

  private static class OrdServiceTeamTupleScheme extends TupleScheme<OrdServiceTeam> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, OrdServiceTeam struct) throws TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetApplyDate()) {
        optionals.set(0);
      }
      if (struct.isSetCollegeId()) {
        optionals.set(1);
      }
      if (struct.isSetCollegeName()) {
        optionals.set(2);
      }
      if (struct.isSetFamilyName()) {
        optionals.set(3);
      }
      if (struct.isSetCodeName()) {
        optionals.set(4);
      }
      if (struct.isSetTeacherName()) {
        optionals.set(5);
      }
      if (struct.isSetAmount()) {
        optionals.set(6);
      }
      if (struct.isSetPackageId()) {
        optionals.set(7);
      }
      if (struct.isSetPackageName()) {
        optionals.set(8);
      }
      if (struct.isSetTeacherId()) {
        optionals.set(9);
      }
      if (struct.isSetTeacherEmail()) {
        optionals.set(10);
      }
      if (struct.isSetOrdStatus()) {
        optionals.set(11);
      }
      if (struct.isSetOrdDetailId()) {
        optionals.set(12);
      }
      if (struct.isSetBizDate()) {
        optionals.set(13);
      }
      if (struct.isSetSecondProjId()) {
        optionals.set(14);
      }
      if (struct.isSetSecondProjName()) {
        optionals.set(15);
      }
      if (struct.isSetFamilyId()) {
        optionals.set(16);
      }
      if (struct.isSetStuImId()) {
        optionals.set(17);
      }
      if (struct.isSetFirstProjId()) {
        optionals.set(18);
      }
      if (struct.isSetFirstProjName()) {
        optionals.set(19);
      }
      if (struct.isSetStuId()) {
        optionals.set(20);
      }
      if (struct.isSetStuName()) {
        optionals.set(21);
      }
      if (struct.isSetStuNickName()) {
        optionals.set(22);
      }
      if (struct.isSetStuPhone()) {
        optionals.set(23);
      }
      if (struct.isSetProvinceId()) {
        optionals.set(24);
      }
      if (struct.isSetProvinceName()) {
        optionals.set(25);
      }
      if (struct.isSetUserId()) {
        optionals.set(26);
      }
      if (struct.isSetTags()) {
        optionals.set(27);
      }
      oprot.writeBitSet(optionals, 28);
      if (struct.isSetApplyDate()) {
        oprot.writeString(struct.applyDate);
      }
      if (struct.isSetCollegeId()) {
        oprot.writeI32(struct.collegeId);
      }
      if (struct.isSetCollegeName()) {
        oprot.writeString(struct.collegeName);
      }
      if (struct.isSetFamilyName()) {
        oprot.writeString(struct.familyName);
      }
      if (struct.isSetCodeName()) {
        oprot.writeString(struct.codeName);
      }
      if (struct.isSetTeacherName()) {
        oprot.writeString(struct.teacherName);
      }
      if (struct.isSetAmount()) {
        oprot.writeI32(struct.amount);
      }
      if (struct.isSetPackageId()) {
        oprot.writeI32(struct.packageId);
      }
      if (struct.isSetPackageName()) {
        oprot.writeString(struct.packageName);
      }
      if (struct.isSetTeacherId()) {
        oprot.writeI32(struct.teacherId);
      }
      if (struct.isSetTeacherEmail()) {
        oprot.writeString(struct.teacherEmail);
      }
      if (struct.isSetOrdStatus()) {
        oprot.writeString(struct.ordStatus);
      }
      if (struct.isSetOrdDetailId()) {
        oprot.writeI32(struct.ordDetailId);
      }
      if (struct.isSetBizDate()) {
        oprot.writeString(struct.bizDate);
      }
      if (struct.isSetSecondProjId()) {
        oprot.writeI32(struct.secondProjId);
      }
      if (struct.isSetSecondProjName()) {
        oprot.writeString(struct.secondProjName);
      }
      if (struct.isSetFamilyId()) {
        oprot.writeI32(struct.familyId);
      }
      if (struct.isSetStuImId()) {
        oprot.writeString(struct.stuImId);
      }
      if (struct.isSetFirstProjId()) {
        oprot.writeI32(struct.firstProjId);
      }
      if (struct.isSetFirstProjName()) {
        oprot.writeString(struct.firstProjName);
      }
      if (struct.isSetStuId()) {
        oprot.writeI32(struct.stuId);
      }
      if (struct.isSetStuName()) {
        oprot.writeString(struct.stuName);
      }
      if (struct.isSetStuNickName()) {
        oprot.writeString(struct.stuNickName);
      }
      if (struct.isSetStuPhone()) {
        oprot.writeString(struct.stuPhone);
      }
      if (struct.isSetProvinceId()) {
        oprot.writeI32(struct.provinceId);
      }
      if (struct.isSetProvinceName()) {
        oprot.writeString(struct.provinceName);
      }
      if (struct.isSetUserId()) {
        oprot.writeI32(struct.userId);
      }
      if (struct.isSetTags()) {
        {
          oprot.writeI32(struct.tags.size());
          for (UserTag _iter4 : struct.tags)
          {
            _iter4.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, OrdServiceTeam struct) throws TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(28);
      if (incoming.get(0)) {
        struct.applyDate = iprot.readString();
        struct.setApplyDateIsSet(true);
      }
      if (incoming.get(1)) {
        struct.collegeId = iprot.readI32();
        struct.setCollegeIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.collegeName = iprot.readString();
        struct.setCollegeNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.familyName = iprot.readString();
        struct.setFamilyNameIsSet(true);
      }
      if (incoming.get(4)) {
        struct.codeName = iprot.readString();
        struct.setCodeNameIsSet(true);
      }
      if (incoming.get(5)) {
        struct.teacherName = iprot.readString();
        struct.setTeacherNameIsSet(true);
      }
      if (incoming.get(6)) {
        struct.amount = iprot.readI32();
        struct.setAmountIsSet(true);
      }
      if (incoming.get(7)) {
        struct.packageId = iprot.readI32();
        struct.setPackageIdIsSet(true);
      }
      if (incoming.get(8)) {
        struct.packageName = iprot.readString();
        struct.setPackageNameIsSet(true);
      }
      if (incoming.get(9)) {
        struct.teacherId = iprot.readI32();
        struct.setTeacherIdIsSet(true);
      }
      if (incoming.get(10)) {
        struct.teacherEmail = iprot.readString();
        struct.setTeacherEmailIsSet(true);
      }
      if (incoming.get(11)) {
        struct.ordStatus = iprot.readString();
        struct.setOrdStatusIsSet(true);
      }
      if (incoming.get(12)) {
        struct.ordDetailId = iprot.readI32();
        struct.setOrdDetailIdIsSet(true);
      }
      if (incoming.get(13)) {
        struct.bizDate = iprot.readString();
        struct.setBizDateIsSet(true);
      }
      if (incoming.get(14)) {
        struct.secondProjId = iprot.readI32();
        struct.setSecondProjIdIsSet(true);
      }
      if (incoming.get(15)) {
        struct.secondProjName = iprot.readString();
        struct.setSecondProjNameIsSet(true);
      }
      if (incoming.get(16)) {
        struct.familyId = iprot.readI32();
        struct.setFamilyIdIsSet(true);
      }
      if (incoming.get(17)) {
        struct.stuImId = iprot.readString();
        struct.setStuImIdIsSet(true);
      }
      if (incoming.get(18)) {
        struct.firstProjId = iprot.readI32();
        struct.setFirstProjIdIsSet(true);
      }
      if (incoming.get(19)) {
        struct.firstProjName = iprot.readString();
        struct.setFirstProjNameIsSet(true);
      }
      if (incoming.get(20)) {
        struct.stuId = iprot.readI32();
        struct.setStuIdIsSet(true);
      }
      if (incoming.get(21)) {
        struct.stuName = iprot.readString();
        struct.setStuNameIsSet(true);
      }
      if (incoming.get(22)) {
        struct.stuNickName = iprot.readString();
        struct.setStuNickNameIsSet(true);
      }
      if (incoming.get(23)) {
        struct.stuPhone = iprot.readString();
        struct.setStuPhoneIsSet(true);
      }
      if (incoming.get(24)) {
        struct.provinceId = iprot.readI32();
        struct.setProvinceIdIsSet(true);
      }
      if (incoming.get(25)) {
        struct.provinceName = iprot.readString();
        struct.setProvinceNameIsSet(true);
      }
      if (incoming.get(26)) {
        struct.userId = iprot.readI32();
        struct.setUserIdIsSet(true);
      }
      if (incoming.get(27)) {
        {
          org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.tags = new ArrayList<UserTag>(_list5.size);
          UserTag _elem6;
          for (int _i7 = 0; _i7 < _list5.size; ++_i7)
          {
            _elem6 = new UserTag();
            _elem6.read(iprot);
            struct.tags.add(_elem6);
          }
        }
        struct.setTagsIsSet(true);
      }
    }
  }

}

